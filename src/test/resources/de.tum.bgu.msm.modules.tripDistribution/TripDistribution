travelTimeParamHbs = -0.009;
impedanceParamHbs = 12.8;
attractionParamHbs = 0.5;

travelTimeParamHbo = -0.014;
impedanceParamHbo = 10.3;
attractionParamHbo = 1.3;

travelTimeParamHbw = -0.011;
impedanceParamHbw = 9;
attractionParamHbw = 1.2;

travelTimeParamHbe = -0.01;
impedanceParamHbe = 9;
attractionParamHbe = 0.9;

travelTimeParamNhbw = -0.08;
impedanceParamNhbw = 8.3;
attractionParamNhbw = 1.2;

travelTimeParamNhbo = -0.08;
impedanceParamNhbo = 8.;
attractionParamNhbo = 1.4;


var calculateHBW = function (travelTime, totalEmployees) {
    impedanceImpact = impedanceParamHbw * Math.exp(travelTimeParamHbw * travelTime);

    if(totalEmployees == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(totalEmployees);
    }
    attractionImpact = attraction * attractionParamHbw;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBE = function (travelTime, schoolEnrollment) {
    impedanceImpact = impedanceParamHbe * Math.exp(travelTimeParamHbe * travelTime);

    if(schoolEnrollment == 0) {
        attraction = 0;
    } else {
        attraction = Math.log(schoolEnrollment);
    }

    attractionImpact = attraction * attractionParamHbe;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBS  = function (travelTime, retailEmployees) {
    impedanceImpact = impedanceParamHbs * Math.exp(travelTimeParamHbs * travelTime);
    if(retailEmployees == 0) {
        attractionImpact = 0;
    } else {
        attractionImpact = Math.log(retailEmployees) * attractionParamHbs;
    }
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateHBO = function (travelTime, households, adminEmployees, serviceEmployees) {
    impedanceImpact = impedanceParamHbo * Math.exp(travelTimeParamHbo * travelTime);
    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    attractionImpact = attraction * attractionParamHbo;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateNHBW = function (travelTime, households, adminEmployees, serviceEmployees, retailEmployees) {
    impedanceImpact = impedanceParamNhbw * Math.exp(travelTimeParamNhbw * travelTime);

print(impedanceImpact+"nhbw");
    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParamNhbw;
    return Math.exp(impedanceImpact + attractionImpact);
}

var calculateNHBO = function (travelTime, households, adminEmployees, serviceEmployees, retailEmployees) {
    impedanceImpact = impedanceParamNhbo * Math.exp(travelTimeParamNhbo * travelTime);

    print(impedanceImpact+ "nhbo");
    attraction = 0;
    if(households > 0) {
        attraction += Math.log(households);
    }
    if(retailEmployees > 0) {
        attraction += Math.log(retailEmployees);
    }
    if(serviceEmployees > 0) {
        attraction += Math.log(serviceEmployees);
    }
    if(adminEmployees > 0) {
        attraction += Math.log(adminEmployees);
    }
    attractionImpact = attraction * attractionParamNhbo;
    print(attractionImpact);
    return Math.exp(impedanceImpact + attractionImpact);
}

function log() {
    logVal = 0;
    logger.debug("\n_______________________________________________" +
    "\nCalculating Utility: base zone " + baseZone + " | target zone " + targetZone + " | purpose " + purpose +
    "\nIntercept            = " + intercept +
    "\nUtility              = " + (logVal+= intercept) +
    "\n***" +
    "\nImpedance        = " + impedanceImpact +
    "\nUtility              = " + (logVal+= impedanceImpact) +
    "\n***" +
    "\nAttraction Impact    = " + attractionImpact +
    "\nUtility              = " + (logVal+=attractionImpact) +
    "\n_______________________________________________");
}
