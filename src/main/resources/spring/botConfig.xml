<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="answers.xml"/>
    <import resource="processors.xml"/>
    <import resource="songs.xml"/>

    <bean id="supportChatId" class="java.lang.Long">
        <constructor-arg value="-1001063148517"/>
    </bean>

    <bean id="randomYesNoAnswerModule" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="и+го+рь,.*\?"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.RandomAnswer">
                <property name="preprocessors" ref="preprocessors"/>
                <property name="answers" ref="yesNo"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="doNotKnowAnswerModule" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern"
                          value="и+го+рь,\s*(когда|где|куда|откуда|кто|как|как\w{2}|насколько|сколько|почему|отчего)\s.*\?"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.RandomAnswer">
                <property name="answers" ref="doNotKnow"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="choiceMaker" class="ru.javazen.telegram.bot.handler.ChoiceMaker">
        <property name="pattern" value="и+го+рь,\s*(?&lt;options&gt;.+\s+или\s+.+)\?"/>
        <property name="comparator" ref="randomComparator"/>
        <property name="splitPattern" value="(?i)\s*(,|\sили)\s+"/>
        <property name="preprocessors" ref="preprocessors"/>
    </bean>

    <bean id="choiceMakerWithContext" class="ru.javazen.telegram.bot.handler.ChoiceMakerWithContext"
          parent="choiceMaker">
        <property name="pattern" value="и+го+рь,\s*(?&lt;context&gt;.+?):\s*(?&lt;options&gt;.+\s+или\s+.+)\?"/>
    </bean>

    <bean id="rusCharSet" class="java.lang.String">
        <constructor-arg value="йцукенгшщзхъфывапролджэячсмитьбю.ёЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ,Ё&quot;№;%:?"/>
    </bean>

    <bean id="engCharSet" class="java.lang.String">
        <constructor-arg
                value="qwertyuiop[]asdfghjkl;'zxcvbnm,./`QWERTYUIOP{}ASDFGHJKL:&quot;ZXCVBNM&lt;&gt;?~@#$%^&amp;"
        />
    </bean>

    <bean id="replyLayoutSwitcherModuleRus" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="(п[оа][- ]?р[ую][сз][сз]?[кг][ие].*|rus?.*|рус.*|hec.*|кгы?.*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.ReplyLayoutSwitcher">
                <property name="sourceCharSet" ref="engCharSet"/>
                <property name="targetCharSet" ref="rusCharSet"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="replyLayoutSwitcherModuleEng" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="([иае]нгл.*|eng.*|утп.*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.ReplyLayoutSwitcher">
                <property name="sourceCharSet" ref="rusCharSet"/>
                <property name="targetCharSet" ref="engCharSet"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="gayAnswerDetector" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                    <property name="pattern" value="[^a-zа-я]*[нhn][еe][тt][^?a-zа-я]*"/>
                </bean>
                <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                    <property name="probability" value="0.5"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleAnswer">
                <constructor-arg name="answer" value="Пидора ответ!"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="jokeAbout300" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value=".*([3з][0oо][0oо]|[тt][рp][иu][сc][тt][aаоo0])"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleAnswer">
                <constructor-arg name="answer" value="Отсоси у тракториста!"/>
            </bean>
        </constructor-arg>
    </bean>


    <bean id="denyWithReverseAnswer" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="и+го+рь,\s*ты(\s*|\s.+)\?"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <!--Нет блять, а ты?-->
                <property name="sticker" value="BQADAgADdwADYI4MBy0SHMKDG97AAg"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="headOfDickDetector" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                    <property name="pattern" value="[^a-zа-я]*(й+а+|я+)[^a-zа-я]*"/>
                </bean>
                <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                    <property name="probability" value="0.66"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleAnswer">
                <constructor-arg name="answer" value="Головка от хуя!"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="repeaterAdvanced" class="ru.javazen.telegram.bot.handler.RepeaterAdvanced">
        <property name="pattern" value="и+го+рь,\s*ск[ао]ж[иы] (.+)"/>
    </bean>

    <bean id="updateInfoProvider" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="/info(| .*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.UpdateInfoProvider">
                <property name="invalidPathMessageSupplier" ref="doNotUnderstandSupplier"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="forwardMessageBridge" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="/forward_to (.+)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.MessageForwardBridge"/>
        </constructor-arg>
    </bean>

    <bean id="chatBridgeWithDenis" class="ru.javazen.telegram.bot.handler.ChatBridge">
        <!--Chat with normal people-->
        <property name="firstChat" value="-1001045629601"/>
        <!--Chat with Denis-->
        <property name="secondChat" value="-1001038770422"/>
    </bean>

    <bean id="getStickerByIdModule" class="ru.javazen.telegram.bot.handler.GetStickerById">
        <property name="pattern" value="/sticker (.+)"/>
    </bean>

    <bean id="randomFacePalmModule" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                <property name="probability" value="0.01"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <!-- Face palm by Denis Zaichenko -->
                <property name="sticker" value="BQADAgADVwADYI4MB8LNksbDCpV9Ag"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="pinnedForwarder" class="ru.javazen.telegram.bot.handler.PinnedForwarder">
        <property name="storeFromChatIds">
            <list>
                <value>-1001038770422</value>
            </list>
        </property>
        <property name="storeChatId" value="-1001066106029"/>
    </bean>

    <bean id="songSingerModule" class="ru.javazen.telegram.bot.handler.InstanceForChatController">
        <lookup-method name="newInstance" bean="songSinger"/>
    </bean>
    <bean id="songSinger" class="ru.javazen.telegram.bot.handler.SongSinger" scope="prototype">
        <constructor-arg name="repository" ref="songRepository"/>
    </bean>
    <bean id="songRepository" class="ru.javazen.telegram.bot.service.SongRepositoryImpl">
        <constructor-arg name="encoder" ref="songEncoder"/>
        <constructor-arg name="songs" ref="songs"/>
    </bean>

    <bean id="anniversaryMessageCongratulations"
          class="ru.javazen.telegram.bot.handler.AnniversaryMessageCongratulations">
        <property name="messageIdPattern" value="\d0{3,}"/>
        <property name="templates">
            <list>
                <value>Achievement Get! {0} сообщений в чате</value>
                <value>Это было сообщение номер {0}. Здорово, правда?!</value>
                <value>Опа, а у нас тут уже {0} сообщений</value>
                <value>В этом чате {0} сообщений уже. Одумайтесь!</value>
                <value>Вы стали автором {0}-ого сообщения в этом чате! Можете 2 раза улыбнуться</value>
            </list>
        </property>
    </bean>

    <bean id="continueRepeatableSequenceModule" class="ru.javazen.telegram.bot.handler.InstanceForChatController">
        <lookup-method name="newInstance" bean="continueRepeatableSequenceHandler"/>
    </bean>
    <bean id="continueRepeatableSequenceHandler"
          class="ru.javazen.telegram.bot.handler.ContinueRepeatableSequence"
          scope="prototype"/>

    <bean id="counter" class="ru.javazen.telegram.bot.handler.Counter">
        <property name="pattern" value="и+го+рь,? считай( от (?&lt;from&gt;-?\d+)|)( до (?&lt;to&gt;-?\d+)|)"/>
        <property name="errorMessage" value="сам считай"/>
    </bean>

    <bean id="lowLevelJokesToggle" parent="abstractToggle">
        <property name="configKey" value="lowLevelJokes"/>
        <property name="pattern2value">
            <map>
                <entry key="/dolboeb_mode_on" value="Y"/>
                <entry key="/dolboeb_mode_off" value="N"/>
            </map>
        </property>
    </bean>
    <bean id="lowLevelJokes" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.ChatConfigFilter">
                <property name="configKey" value="lowLevelJokes"/>
                <property name="configValue" value="Y"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handlers">
            <list>
                <ref bean="gayAnswerDetector"/>
                <ref bean="jokeAbout300"/>
                <ref bean="headOfDickDetector"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="secretAndSacred" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.AllowedChatFilter">
                    <property name="allowedChatIds">
                        <list>
                            <value>-1001084636204</value> <!-- Friends without Stas-->
                            <value>-152877647</value> <!-- Defibrillator -->
                            <value>97125098</value> <!-- Andrey -->
                        </list>
                    </property>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handlers">
            <list>
                <ref bean="theAngle"/>
                <ref bean="boysForStas"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="boysForStas" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                    <property name="probability" value="0.9"/>
                </bean>
                <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                    <property name="pattern" value="[^?a-zа-я]*п[ао]ц[ао]ны[^?a-zа-я]*"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <property name="sticker" value="CAADAgADrAADWGWJCqKpjTD8hHQzAg"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="theAngle" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                    <property name="probability" value="0.2"/>
                </bean>
                <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                    <property name="pattern" value="(.*угл.*)|(.*угол.*)"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <property name="sticker" value="CAADAgADngADWGWJCk1fdCmruZR4Ag"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="boysForAll" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filters">
            <list>
                <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                    <property name="probability" value="0.9"/>
                </bean>
                <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                    <property name="pattern" value="[^?a-zа-я]*п[ао]ц[ао]ны[^?a-zа-я]*"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <property name="sticker" value="CAADAgADAgQAAhmGAwABdyWcY6kAAYt8Ag"/>
            </bean>
        </constructor-arg>
    </bean>

    <!--Subscription Module-->
    <bean id="subscriptionListen" class="ru.javazen.telegram.bot.handler.subscriptions.ListenSubscriptionKeysHandler">
    </bean>
    <bean id="subscriptionCreate" class="ru.javazen.telegram.bot.handler.subscriptions.CreateSubscriptionHandler">
        <property name="pattern"
                  value="и+го+рь,? (к[оа]гда|есл?[еи]) (?&lt;userFlag&gt;у меня |я )?(?&lt;trigger&gt;.+?),? (г[оа]вори|ск[оа]ж[иы]) (?&lt;response&gt;.+)"/>
        <property name="successResponseSupplier" ref="okSupplier"/>
        <property name="tooManyDuplicatesErrorSupplier">
            <bean class="ru.javazen.telegram.bot.function.RandomItemSupplier">
                <property name="optionRatios">
                    <map>
                        <entry key="Может хватит уже?" value="4"/>
                        <entry key="Не-не, больше не лезет!" value="2"/>
                        <entry key="Достаточно!" value="1"/>
                        <entry key="Воу воу. Охлади свое трахание" value="1"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="subscriptionGet" class="ru.javazen.telegram.bot.handler.subscriptions.GetSubscriptionsByKeyHandler">
        <property name="pattern"
                  value="и+го+рь,? [чш]т?[ое] ск[оа]ж[еи]шь?,? (к[оа]гда|есл?[еи]) (?&lt;trigger&gt;.+)\??"/>
        <property name="onEmptyResponseSupplier" ref="emptySupplier"/>
    </bean>
    <bean id="subscriptionCancel" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern"
                          value="(з[ао]+(в[ао]ли|ткнись|мол(кн|ч)и|бу[дт]ь)|ш[ао]+т[ао]+п|пр[еи]крати|п[еи]р[еи]стань)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.subscriptions.CancelSubscriptionHandler">
                <property name="successResponseSupplier" ref="sadOkSupplier"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="abstractToggle" class="ru.javazen.telegram.bot.handler.ToggleChatConfigHandler" abstract="true">
        <property name="value2response">
            <map>
                <entry key="Y" value-ref="happyOkSupplier"/>
                <entry key="N" value-ref="sadOkSupplier"/>
            </map>
        </property>
    </bean>

    <bean name="messageCollectorSaveTextSwitch" parent="abstractToggle">
        <property name="configKey" value="messageCollector.saveText"/>
        <property name="pattern2value">
            <map>
                <entry key="/fsb_mode_on" value="Y"/>
                <entry key="/fsb_mode_off" value="N"/>
            </map>
        </property>
    </bean>

    <bean id="statisticReports" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.AllowedChatFilter">
                <property name="allowedChatId" ref="supportChatId"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handlers">
            <list>
                <bean id="activeChats" class="ru.javazen.telegram.bot.handler.FilterAdapter">
                    <constructor-arg name="filter">
                        <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                            <property name="pattern" value="/active_chats"/>
                        </bean>
                    </constructor-arg>
                    <constructor-arg name="handler">
                        <bean class="ru.javazen.telegram.bot.handler.stats.ActiveChatsHandler"/>
                    </constructor-arg>
                </bean>
                <bean id="activeUsers" class="ru.javazen.telegram.bot.handler.FilterAdapter">
                    <constructor-arg name="filter">
                        <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                            <property name="pattern" value="/active_users"/>
                        </bean>
                    </constructor-arg>
                    <constructor-arg name="handler">
                        <bean class="ru.javazen.telegram.bot.handler.stats.ActiveUsersHandler"/>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!--suppress SpringXmlAutowireExplicitlyInspection -->
    <bean id="bot" class="ru.javazen.telegram.bot.CompositeBot" autowire="constructor">
        <constructor-arg name="name" value="${bot.name}"/>
        <constructor-arg name="token" value="${bot.token}"/>

        <property name="supportChatId" ref="supportChatId"/>
        <property name="startMessageSupplier" ref="startSupplier"/>
        <property name="updateHandlers">
            <list>
                <ref bean="anniversaryMessageCongratulations"/>
                <ref bean="messageCollectorSaveTextSwitch"/>
                <ref bean="pinnedForwarder"/>
                <ref bean="continueRepeatableSequenceModule"/>
                <ref bean="statisticReports"/>
                <ref bean="subscriptionCreate"/>
                <ref bean="subscriptionGet"/>
                <ref bean="subscriptionCancel"/>
                <ref bean="subscriptionListen"/>
                <ref bean="scheduler"/>
                <ref bean="updateInfoProvider"/>
                <ref bean="replyLayoutSwitcherModuleRus"/>
                <ref bean="replyLayoutSwitcherModuleEng"/>
                <ref bean="repeaterAdvanced"/>
                <ref bean="forwardMessageBridge"/>
                <ref bean="denyWithReverseAnswer"/>
                <ref bean="choiceMakerWithContext"/>
                <ref bean="choiceMaker"/>
                <ref bean="doNotKnowAnswerModule"/>
                <ref bean="randomYesNoAnswerModule"/>
                <ref bean="counter"/>
                <ref bean="getStickerByIdModule"/>
                <!--<ref bean="randomFacePalmModule"/>-->
                <ref bean="lowLevelJokesToggle"/>
                <ref bean="lowLevelJokes"/>
                <ref bean="songSingerModule"/>
                <ref bean="secretAndSacred"/>
                <ref bean="boysForAll"/>
            </list>
        </property>
    </bean>

</beans>
