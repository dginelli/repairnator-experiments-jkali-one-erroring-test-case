library IEEE;
use IEEE.std_logic_1164.all;
use std.textio.all;

entity stdIOInterface is end;

architecture stdIOInterface_a of stdIOInterface is

  function chr(sl: std_logic) return character is
    variable c: character;
  begin
      case sl is
         when 'U' => c:= 'U';
         when 'X' => c:= 'X';
         when '0' => c:= '0';
         when '1' => c:= '1';
         when 'Z' => c:= 'Z';
         when 'W' => c:= 'W';
         when 'L' => c:= 'L';
         when 'H' => c:= 'H';
         when '-' => c:= '-';
      end case;
    return c;
  end chr;

  function str(slv: std_logic_vector) return string is
     variable result : string (1 to slv'length);
     variable r : integer;
  begin
     r := slv'length;
     for i in slv'range loop
        result(r) := chr(slv(i));
        r := r - 1;
     end loop;
     return result;
  end str;

  component {{name}}
    port (
      {{ports}}
    );
  end component;

  {{signals}}

  signal mainIn : std_logic_vector({{incount}} downto 0);
  signal mainOut : std_logic_vector({{outcount}} downto 0);

begin
	UserCode: {{name}} port map (
       {{map}}
	);

	{{inOutMapping}}

	process
		variable ll: line;

	begin
		write(ll, string'(""));
		while (ll.all /= "End") loop
			deallocate(ll);
			readline(input, ll);
			for i in ll'range loop
				case ll(i) is
					when '0' => mainIn(i-1) <= '0';
					when '1' => mainIn(i-1) <= '1';
					when 'Z' => mainIn(i-1) <= 'Z';
					when ' ' =>  next;
					when others => next;
				end case;
			end loop;
			wait for 1 ns;
			deallocate(ll);
			write(ll, "Digital:" & string'(str(mainOut)));
			writeline(output, ll);
		end loop;
		wait;
	end process;
end;