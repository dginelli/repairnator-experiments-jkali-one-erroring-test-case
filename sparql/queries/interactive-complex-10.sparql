PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://www.ldbc.eu/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://www.ldbc.eu/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

select
    (?fof AS ?personId)
    (?first AS ?personFirstName)
    (?last AS ?personLastName)
    (?gender AS ?personGender)
    (?locationname AS ?personCityName)
    (
     (( select count(distinct ?post)
        where {
	    ?post a snvoc:Post .
            ?post snvoc:hasCreator ?fof .
            ?post snvoc:hasTag ?tag .
            sn:pers$Person snvoc:hasInterest ?tag
        }
     ))
     -
     (( select count(distinct ?post)
        where {
	    ?post a snvoc:Post .
            ?post snvoc:hasCreator ?fof .
            filter (!exists {sn:pers$Person snvoc:hasInterest ?tag. ?post snvoc:hasTag ?tag .})
        }
     )) AS ?commonInterestScore
    )
where {
   {select distinct ?fof
    where {
        sn:pers$Person snvoc:knows ?fr .
        ?fr snvoc:knows ?fof .
	filter (?fof != sn:pers$Person)
        minus { sn:pers$Person snvoc:knows ?fof } .
    }
   } .
   ?fof snvoc:firstName ?first .   ?fof snvoc:lastName ?last .
   ?fof snvoc:gender ?gender .     ?fof snvoc:birthday ?bday .
   ?fof snvoc:isLocatedIn ?based . ?based foaf:name ?locationname .
   filter (1 = if (month (?bday) = $HS0, if (day(?bday) >= 21, 1, 0), if (month (?bday) = $HS1, if (day(?bday) < 22, 1, 0), 0)))
}
order by desc(?score) ?fof
limit 10
