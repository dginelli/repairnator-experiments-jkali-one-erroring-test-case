[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for org.codingmatters.value.objects:cdm-value-objects-json:jar:0.0.1-SNAPSHOT
[WARNING] The expression ${version} is deprecated. Please use ${project.version} instead.
[WARNING] The expression ${version} is deprecated. Please use ${project.version} instead.
[WARNING] The expression ${version} is deprecated. Please use ${project.version} instead.
[WARNING] The expression ${version} is deprecated. Please use ${project.version} instead.
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for org.codingmatters.value.objects:cdm-value-objects-php:jar:0.0.1-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-surefire-plugin is missing. @ org.codingmatters.value.objects:cdm-value-objects-php:[unknown-version], /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/pom.xml, line 118, column 21
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Value Objects Generator
[INFO] org.codingmatters.value.objects:cdm-value-objects-parent
[INFO] org.codingmatters.value.objects:cdm-value-objects-bom
[INFO] org.codingmatters.value.objects:cdm-value-objects-spec
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation-commons
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation-main
[INFO] org.codingmatters.value.objects:cdm-value-objects-json
[INFO] org.codingmatters.value.objects:cdm-value-objects-doc
[INFO] cdm-value-objects-php
[INFO] org.codingmatters.value.objects:cdm-value-objects-maven-plugin
[INFO] org.codingmatters.value.objects:cdm-value-objects-values
[INFO] org.codingmatters.value.objects:cdm-value-objects-demo
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Value Objects Generator 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-parent 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-bom 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-spec 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-spec ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-spec/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-spec ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-spec ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-spec/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-spec ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-spec ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-spec/target/surefire-reports
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.17/surefire-junit4-2.17.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.17/surefire-junit4-2.17.pom (3 KB at 5.9 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.17/surefire-providers-2.17.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.17/surefire-providers-2.17.pom (3 KB at 96.8 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.17/surefire-junit4-2.17.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.17/surefire-junit4-2.17.jar (63 KB at 1013.1 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.codingmatters.value.objects.reader.SpecReaderEnumPropertyTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.527 sec - in org.codingmatters.value.objects.reader.SpecReaderEnumPropertyTest
Running org.codingmatters.value.objects.reader.SpecReaderConformsToTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.106 sec - in org.codingmatters.value.objects.reader.SpecReaderConformsToTest
Running org.codingmatters.value.objects.reader.SpecReaderSimpleTest
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec - in org.codingmatters.value.objects.reader.SpecReaderSimpleTest
Running org.codingmatters.value.objects.reader.SpecReaderPropertyWithObjectTypeSpecTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec - in org.codingmatters.value.objects.reader.SpecReaderPropertyWithObjectTypeSpecTest

Results :

Tests run: 19, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-generation-commons 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-generation-commons ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation-commons/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-generation-commons ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-generation-commons ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation-commons/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-generation-commons ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-generation-commons ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-generation 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-generation ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-generation ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-generation ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-generation ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-generation ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.codingmatters.value.objects.generation.ValueChangerFrameworkTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.618 sec - in org.codingmatters.value.objects.generation.ValueChangerFrameworkTest
Running org.codingmatters.value.objects.generation.ValueEqualityTest
FILE CONTENT - /tmp/junit7299375525135589813/org/generated/ValImpl.java
0001 package org.generated;
0002 
0003 import java.lang.Object;
0004 import java.lang.Override;
0005 import java.lang.String;
0006 import java.util.Arrays;
0007 import java.util.Objects;
0008 import org.generated.optional.OptionalVal;
0009 
0010 class ValImpl implements Val {
0011   private final String prop1;
0012 
0013   private final String prop2;
0014 
0015   private final byte[] binary;
0016 
0017   ValImpl(String prop1, String prop2, byte[] binary) {
0018     this.prop1 = prop1;
0019     this.prop2 = prop2;
0020     this.binary = binary;
0021   }
0022 
0023   public String prop1() {
0024     return this.prop1;
0025   }
0026 
0027   public String prop2() {
0028     return this.prop2;
0029   }
0030 
0031   public byte[] binary() {
0032     return this.binary;
0033   }
0034 
0035   public Val withProp1(String value) {
0036     return Val.from(this).prop1(value).build();
0037   }
0038 
0039   public Val withProp2(String value) {
0040     return Val.from(this).prop2(value).build();
0041   }
0042 
0043   public Val withBinary(byte[] value) {
0044     return Val.from(this).binary(value).build();
0045   }
0046 
0047   public Val changed(Val.Changer changer) {
0048     return changer.configure(Val.from(this)).build();
0049   }
0050 
0051   @Override
0052   public boolean equals(Object o) {
0053     if (this == o) return true;
0054     if (o == null || getClass() != o.getClass()) return false;
0055     ValImpl that = (ValImpl) o;
0056         return Objects.equals(this.prop1, that.prop1) && 
0057         Objects.equals(this.prop2, that.prop2) && 
0058         Arrays.equals(this.binary, that.binary);
0059   }
0060 
0061   @Override
0062   public int hashCode() {
0063     return Arrays.deepHashCode(new Object[]{this.prop1, this.prop2, this.binary});
0064   }
0065 
0066   @Override
0067   public String toString() {
0068     return "Val{" +
0069         "prop1=" + Objects.toString(this.prop1) +
0070         ", " + "prop2=" + Objects.toString(this.prop2) +
0071         ", " + "binary=" + Arrays.toString(this.binary) +
0072         '}';
0073   }
0074 
0075   public OptionalVal opt() {
0076     return OptionalVal.of(this);
0077   }
0078 }
--------------------------------
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.729 sec - in org.codingmatters.value.objects.generation.ValueEqualityTest
Running org.codingmatters.value.objects.generation.ValueHashCodeTest
FILE CONTENT - /tmp/junit215164629987520058/org/generated/ValImpl.java
0001 package org.generated;
0002 
0003 import java.lang.Object;
0004 import java.lang.Override;
0005 import java.lang.String;
0006 import java.util.Arrays;
0007 import java.util.Objects;
0008 import org.generated.optional.OptionalVal;
0009 
0010 class ValImpl implements Val {
0011   private final String prop1;
0012 
0013   private final String prop2;
0014 
0015   private final byte[] binary;
0016 
0017   ValImpl(String prop1, String prop2, byte[] binary) {
0018     this.prop1 = prop1;
0019     this.prop2 = prop2;
0020     this.binary = binary;
0021   }
0022 
0023   public String prop1() {
0024     return this.prop1;
0025   }
0026 
0027   public String prop2() {
0028     return this.prop2;
0029   }
0030 
0031   public byte[] binary() {
0032     return this.binary;
0033   }
0034 
0035   public Val withProp1(String value) {
0036     return Val.from(this).prop1(value).build();
0037   }
0038 
0039   public Val withProp2(String value) {
0040     return Val.from(this).prop2(value).build();
0041   }
0042 
0043   public Val withBinary(byte[] value) {
0044     return Val.from(this).binary(value).build();
0045   }
0046 
0047   public Val changed(Val.Changer changer) {
0048     return changer.configure(Val.from(this)).build();
0049   }
0050 
0051   @Override
0052   public boolean equals(Object o) {
0053     if (this == o) return true;
0054     if (o == null || getClass() != o.getClass()) return false;
0055     ValImpl that = (ValImpl) o;
0056         return Objects.equals(this.prop1, that.prop1) && 
0057         Objects.equals(this.prop2, that.prop2) && 
0058         Arrays.equals(this.binary, that.binary);
0059   }
0060 
0061   @Override
0062   public int hashCode() {
0063     return Arrays.deepHashCode(new Object[]{this.prop1, this.prop2, this.binary});
0064   }
0065 
0066   @Override
0067   public String toString() {
0068     return "Val{" +
0069         "prop1=" + Objects.toString(this.prop1) +
0070         ", " + "prop2=" + Objects.toString(this.prop2) +
0071         ", " + "binary=" + Arrays.toString(this.binary) +
0072         '}';
0073   }
0074 
0075   public OptionalVal opt() {
0076     return OptionalVal.of(this);
0077   }
0078 }
--------------------------------
Val{prop1=v, prop2=null, binary=[98, 105, 110, 97, 114, 121]}
Val{prop1=v, prop2=null, binary=[98, 105, 110, 97, 114, 121]}
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.695 sec - in org.codingmatters.value.objects.generation.ValueHashCodeTest
Running org.codingmatters.value.objects.generation.ToStringTest
FILE CONTENT - /tmp/junit5649901670327798795/org/generated/ValImpl.java
0001 package org.generated;
0002 
0003 import java.lang.Object;
0004 import java.lang.Override;
0005 import java.lang.String;
0006 import java.util.Arrays;
0007 import java.util.Objects;
0008 import org.generated.optional.OptionalVal;
0009 
0010 class ValImpl implements Val {
0011   private final String prop1;
0012 
0013   private final String prop2;
0014 
0015   private final Val.Prop3 prop3;
0016 
0017   private final ValueList<Val.Prop4> prop4;
0018 
0019   private final byte[] binary;
0020 
0021   ValImpl(String prop1, String prop2, Val.Prop3 prop3, ValueList<Val.Prop4> prop4, byte[] binary) {
0022     this.prop1 = prop1;
0023     this.prop2 = prop2;
0024     this.prop3 = prop3;
0025     this.prop4 = prop4;
0026     this.binary = binary;
0027   }
0028 
0029   public String prop1() {
0030     return this.prop1;
0031   }
0032 
0033   public String prop2() {
0034     return this.prop2;
0035   }
0036 
0037   public Val.Prop3 prop3() {
0038     return this.prop3;
0039   }
0040 
0041   public ValueList<Val.Prop4> prop4() {
0042     return this.prop4;
0043   }
0044 
0045   public byte[] binary() {
0046     return this.binary;
0047   }
0048 
0049   public Val withProp1(String value) {
0050     return Val.from(this).prop1(value).build();
0051   }
0052 
0053   public Val withProp2(String value) {
0054     return Val.from(this).prop2(value).build();
0055   }
0056 
0057   public Val withProp3(Val.Prop3 value) {
0058     return Val.from(this).prop3(value).build();
0059   }
0060 
0061   public Val withProp4(ValueList<Val.Prop4> value) {
0062     return Val.from(this).prop4(value).build();
0063   }
0064 
0065   public Val withBinary(byte[] value) {
0066     return Val.from(this).binary(value).build();
0067   }
0068 
0069   public Val changed(Val.Changer changer) {
0070     return changer.configure(Val.from(this)).build();
0071   }
0072 
0073   @Override
0074   public boolean equals(Object o) {
0075     if (this == o) return true;
0076     if (o == null || getClass() != o.getClass()) return false;
0077     ValImpl that = (ValImpl) o;
0078         return Objects.equals(this.prop1, that.prop1) && 
0079         Objects.equals(this.prop2, that.prop2) && 
0080         Objects.equals(this.prop3, that.prop3) && 
0081         Objects.equals(this.prop4, that.prop4) && 
0082         Arrays.equals(this.binary, that.binary);
0083   }
0084 
0085   @Override
0086   public int hashCode() {
0087     return Arrays.deepHashCode(new Object[]{this.prop1, this.prop2, this.prop3, this.prop4, this.binary});
0088   }
0089 
0090   @Override
0091   public String toString() {
0092     return "Val{" +
0093         "prop1=" + Objects.toString(this.prop1) +
0094         ", " + "prop2=" + Objects.toString(this.prop2) +
0095         ", " + "prop3=" + Objects.toString(this.prop3) +
0096         ", " + "prop4=" + Objects.toString(this.prop4) +
0097         ", " + "binary=" + Arrays.toString(this.binary) +
0098         '}';
0099   }
0100 
0101   public OptionalVal opt() {
0102     return OptionalVal.of(this);
0103   }
0104 }
--------------------------------
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.235 sec - in org.codingmatters.value.objects.generation.ToStringTest
Running org.codingmatters.value.objects.generation.collection.ValueListTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.155 sec - in org.codingmatters.value.objects.generation.collection.ValueListTest
Running org.codingmatters.value.objects.generation.collection.ValueListImplementationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.206 sec - in org.codingmatters.value.objects.generation.collection.ValueListImplementationTest
Running org.codingmatters.value.objects.generation.collection.ValueSetImplementationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.14 sec - in org.codingmatters.value.objects.generation.collection.ValueSetImplementationTest
Running org.codingmatters.value.objects.generation.collection.ValueSetTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 sec - in org.codingmatters.value.objects.generation.collection.ValueSetTest
Running org.codingmatters.value.objects.generation.ValueSpecGenerationTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.433 sec - in org.codingmatters.value.objects.generation.ValueSpecGenerationTest
Running org.codingmatters.value.objects.generation.ValueInterfaceMethodsTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 sec - in org.codingmatters.value.objects.generation.ValueInterfaceMethodsTest
Running org.codingmatters.value.objects.generation.preprocessor.SpecPreprocessorTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.codingmatters.value.objects.generation.preprocessor.SpecPreprocessorTest
Running org.codingmatters.value.objects.generation.SetPropertySpecGenerationTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.515 sec - in org.codingmatters.value.objects.generation.SetPropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.JavaTypePropertySpecGenerationTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.417 sec - in org.codingmatters.value.objects.generation.JavaTypePropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.ListPropertySpecGenerationTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.962 sec - in org.codingmatters.value.objects.generation.ListPropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.ValueWithTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.237 sec - in org.codingmatters.value.objects.generation.ValueWithTest
Running org.codingmatters.value.objects.generation.EmbeddedObjectPropertySpecGenerationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.516 sec - in org.codingmatters.value.objects.generation.EmbeddedObjectPropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.ConformsToTest
 + junit2881935990004975984
    + org
       + generated
            SingleProtocol.java
            SingleProtocolImpl.java
          + optional
               OptionalSingleProtocol.java
               OptionalManyProtocols.java
            ManyProtocols.java
            ManyProtocolsImpl.java
FILE CONTENT - /tmp/junit2881935990004975984/org/generated/SingleProtocol.java
0001 package org.generated;
0002 
0003 import java.io.Serializable;
0004 import org.generated.optional.OptionalSingleProtocol;
0005 
0006 public interface SingleProtocol extends Serializable {
0007   static Builder builder() {
0008     return new SingleProtocol.Builder();
0009   }
0010 
0011   static SingleProtocol.Builder from(SingleProtocol value) {
0012     if(value != null) {
0013       return new SingleProtocol.Builder()
0014           ;
0015     }
0016     else {
0017       return null;
0018     }
0019   }
0020 
0021   int hashCode();
0022 
0023   SingleProtocol changed(SingleProtocol.Changer changer);
0024 
0025   OptionalSingleProtocol opt();
0026 
0027   class Builder {
0028     public SingleProtocol build() {
0029       return new SingleProtocolImpl();
0030     }
0031   }
0032 
0033   interface Changer {
0034     SingleProtocol.Builder configure(SingleProtocol.Builder builder);
0035   }
0036 }
--------------------------------
 + junit3218247483573391970
    + org
       + generated
            SingleProtocol.java
            SingleProtocolImpl.java
          + optional
               OptionalSingleProtocol.java
               OptionalManyProtocols.java
            ManyProtocols.java
            ManyProtocolsImpl.java
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.112 sec - in org.codingmatters.value.objects.generation.ConformsToTest
Running org.codingmatters.value.objects.generation.SpecCodeGeneratorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.codingmatters.value.objects.generation.SpecCodeGeneratorTest
Running org.codingmatters.value.objects.generation.EnumPropertySpecGenerationTest
 + junit8442229632527630822
    + org
       + outside
            MyEnum.java
       + generated
            ValueList.java
            ValueListImpl.java
          + optional
               OptionalValueList.java
               OptionalValWithRef.java
               OptionalValWithRaw.java
            ValWithRef.java
            ValWithRefImpl.java
            ValWithRaw.java
            ValWithRawImpl.java
 + junit4908560662308510698
    + org
       + outside
            MyEnum.java
       + generated
            ValueList.java
            ValueListImpl.java
          + optional
               OptionalValueList.java
               OptionalValWithRef.java
               OptionalValWithRaw.java
            ValWithRef.java
            ValWithRefImpl.java
            ValWithRaw.java
            ValWithRawImpl.java
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.227 sec - in org.codingmatters.value.objects.generation.EnumPropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.OptionalValueTest
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.01 sec - in org.codingmatters.value.objects.generation.OptionalValueTest
Running org.codingmatters.value.objects.generation.InSpecListPropertySpecGenerationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.312 sec - in org.codingmatters.value.objects.generation.InSpecListPropertySpecGenerationTest
Running org.codingmatters.value.objects.generation.BuilderFromTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.415 sec - in org.codingmatters.value.objects.generation.BuilderFromTest
Running org.codingmatters.value.objects.generation.DeepCollectionPropertyGenerationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.089 sec - in org.codingmatters.value.objects.generation.DeepCollectionPropertyGenerationTest

Results :

Tests run: 101, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-generation-main 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-generation-main ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation-main/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-generation-main ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-generation-main ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-generation-main/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-generation-main ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-generation-main ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-json 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-json ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-json ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- exec-maven-plugin:1.5.0:java (ref) @ cdm-value-objects-json ---
[INFO] 
[INFO] --- exec-maven-plugin:1.5.0:java (spec) @ cdm-value-objects-json ---
[INFO] 
[INFO] --- build-helper-maven-plugin:1.12:add-test-source (default) @ cdm-value-objects-json ---
[INFO] Test Source directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/target/generated-test-sources added.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-json ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-json ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 55 source files to /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/target/test-classes
[INFO] /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/src/test/java/org/codingmatters/value/objects/json/JsonWriterGenerationTest.java: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/src/test/java/org/codingmatters/value/objects/json/JsonWriterGenerationTest.java uses or overrides a deprecated API.
[INFO] /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/src/test/java/org/codingmatters/value/objects/json/JsonWriterGenerationTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/target/generated-test-sources/org/generated/ArraySimpleProps.java: Some input files use unchecked or unsafe operations.
[INFO] /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/target/generated-test-sources/org/generated/ArraySimpleProps.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-json ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-json/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.codingmatters.value.objects.json.spec.definition.SpecDefinitionTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.254 sec - in org.codingmatters.value.objects.json.spec.definition.SpecDefinitionTest
Running org.codingmatters.value.objects.json.JsonReaderGenerationTest
FILE CONTENT - /tmp/junit7572205158374752825/org/generated/json/ExampleValueReader.java
0001 package org.generated.json;
0002 
0003 import com.fasterxml.jackson.core.JsonParser;
0004 import com.fasterxml.jackson.core.JsonToken;
0005 import java.io.IOException;
0006 import java.lang.FunctionalInterface;
0007 import java.lang.String;
0008 import java.util.Arrays;
0009 import java.util.HashSet;
0010 import java.util.LinkedList;
0011 import java.util.List;
0012 import java.util.Set;
0013 import java.util.stream.Collectors;
0014 import org.generated.ExampleValue;
0015 import org.generated.ExampleValue.Builder;
0016 import org.generated.examplevalue.json.ComplexListReader;
0017 import org.generated.examplevalue.json.ComplexReader;
0018 
0019 public class ExampleValueReader {
0020   private static Set PROP_EXPECTEDTOKENS = new HashSet(Arrays.asList(JsonToken.VALUE_STRING));
0021 
0022   public ExampleValue read(JsonParser parser) throws IOException {
0023     if(parser.getCurrentToken() == null) {
0024       parser.nextToken();
0025     }
0026     if(parser.currentToken() == JsonToken.VALUE_NULL) return null;
0027     if(parser.currentToken() != JsonToken.START_OBJECT) {
0028       throw new IOException(
0029                   String.format("reading a %s object, was expecting %s, but was %s",
0030                           ExampleValue.class.getName(), JsonToken.START_OBJECT, parser.currentToken()
0031                   )
0032           );
0033     }
0034     ExampleValue.Builder builder = ExampleValue.builder();
0035     while (parser.nextToken() != JsonToken.END_OBJECT) {
0036       Token token = Token.from(parser.getCurrentName());
0037       if(token != null) {
0038         switch (token) {
0039           case PROP: {
0040             Set<JsonToken> expectedTokens = PROP_EXPECTEDTOKENS;
0041             builder.prop(this.readValue(parser, jsonParser -> jsonParser.getText(), "prop", expectedTokens));
0042             break;
0043           }
0044           case LISTPROP: {
0045             builder.listProp(this.readListValue(parser, jsonParser -> jsonParser.getText(), "listProp"));
0046             break;
0047           }
0048           case COMPLEX: {
0049             parser.nextToken();
0050             builder.complex(new ComplexReader().read(parser));
0051             break;
0052           }
0053           case COMPLEXLIST: {
0054             ComplexListReader reader = new ComplexListReader();
0055             builder.complexList(this.readListValue(parser, jsonParser -> reader.read(jsonParser), "complexList"));
0056             break;
0057           }
0058           default: {
0059             this.consumeUnexpectedProperty(parser);
0060           }
0061         }
0062       } else {
0063         this.consumeUnexpectedProperty(parser);
0064       }
0065     }
0066     return builder.build();
0067   }
0068 
0069   public ExampleValue[] readArray(JsonParser parser) throws IOException {
0070     parser.nextToken();
0071     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0072     if (parser.currentToken() == JsonToken.START_ARRAY) {
0073       LinkedList<ExampleValue> listValue = new LinkedList<>();
0074       while (parser.nextToken() != JsonToken.END_ARRAY) {
0075         if(parser.currentToken() == JsonToken.VALUE_NULL) {
0076           listValue.add(null);
0077         } else {
0078           listValue.add(this.read(parser));
0079         }
0080       }
0081       return listValue.toArray(new ExampleValue[listValue.size()]);
0082     }
0083     throw new IOException(String.format("failed reading org.generated.ExampleValue array, current token was %s", parser.currentToken()));
0084   }
0085 
0086   private <T> T readValue(JsonParser parser, Reader<T> reader, String propertyName, Set<JsonToken> expectedTokens) throws IOException {
0087     parser.nextToken();
0088     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0089     if (expectedTokens.contains(parser.currentToken())) return reader.read(parser);
0090     throw new IOException(
0091             String.format("reading property %s, was expecting %s, but was %s",
0092                 propertyName, expectedTokens, parser.currentToken()
0093             )
0094         );
0095   }
0096 
0097   private <T> List<T> readListValue(JsonParser parser, Reader<T> reader, String propertyName) throws IOException {
0098     parser.nextToken();
0099     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0100     if (parser.currentToken() == JsonToken.START_ARRAY) {
0101       LinkedList<T> listValue = new LinkedList<>();
0102       while (parser.nextToken() != JsonToken.END_ARRAY) {
0103         if(parser.currentToken() == JsonToken.VALUE_NULL) {
0104           listValue.add(null);
0105         } else {
0106           listValue.add(reader.read(parser));
0107         }
0108       }
0109       return listValue;
0110     }
0111     throw new IOException(
0112                 String.format("reading property %s, was expecting %s, but was %s",
0113                         propertyName, JsonToken.START_ARRAY, parser.currentToken()
0114                 )
0115         );
0116   }
0117 
0118   private void consumeUnexpectedProperty(JsonParser parser) throws IOException {
0119     parser.nextToken();
0120     if(parser.currentToken().isStructStart()) {
0121       int level = 1;
0122       do {
0123         parser.nextToken();
0124         if (parser.currentToken().isStructStart()) {
0125           level++;
0126         } if (parser.currentToken().isStructEnd()) {
0127           level--;
0128         }
0129       } while(level > 0);
0130     }
0131   }
0132 
0133   @FunctionalInterface
0134   private interface Reader<T> {
0135     T read(JsonParser parser) throws IOException;
0136   }
0137 
0138   enum Token {
0139     __UNKNOWN__("__UNKNOWN__", "__UNKNOWN__"),
0140 
0141     PROP("prop", "prop"),
0142 
0143     LISTPROP("listProp", "listProp"),
0144 
0145     COMPLEX("complex", "complex"),
0146 
0147     COMPLEXLIST("complexList", "complexList");
0148 
0149     private final String name;
0150 
0151     private final String rawName;
0152 
0153     Token(String name, String rawName) {
0154       this.name = name;
0155       this.rawName = rawName;
0156     }
0157 
0158     private static String normalizeFieldName(String fieldName) {
0159       if(fieldName == null) return null;
0160       if(fieldName.trim().equals("")) return "";
0161       fieldName = Arrays.stream(fieldName.split("(\\s|-)+")).map(s -> s.substring(0, 1).toUpperCase() + s.substring(1)).collect(Collectors.joining());
0162       fieldName =  fieldName.substring(0, 1).toLowerCase() + fieldName.substring(1);
0163       return fieldName;
0164     }
0165 
0166     public static Token from(String str) {
0167       for(Token token : Token.values()) {
0168         if(token.name.equals(str)) {
0169           return token;
0170         } else if(token.rawName.equals(str)) {
0171           return token;
0172         } else if(token.name.equals(normalizeFieldName(str))) {
0173           return token;
0174         } else if(token.rawName.equals(normalizeFieldName(str))) {
0175           return token;
0176         }
0177       }
0178       return __UNKNOWN__;
0179     }
0180   }
0181 }
--------------------------------
 + junit3070298473759803644
    + org
       + generated
          + ref
               ExtReferenced.java
               ExtReferencedImpl.java
             + optional
                  OptionalExtReferenced.java
             + json
                  ExtReferencedWriter.java
                  ExtReferencedReader.java
            ValueList.java
            ValueListImpl.java
          + optional
               OptionalValueList.java
               OptionalExampleValue.java
               OptionalSimpleProps.java
               OptionalArraySimpleProps.java
               OptionalRefValue.java
               OptionalReferenced.java
               OptionalEnumProperties.java
               OptionalInSpecEnumProperties.java
               OptionalValueObjectProps.java
               OptionalHints.java
               OptionalNoprop.java
               OptionalBinary.java
          + examplevalue
               Complex.java
               ComplexImpl.java
             + optional
                  OptionalComplex.java
                  OptionalComplexList.java
               ComplexList.java
               ComplexListImpl.java
             + json
                  ComplexWriter.java
                  ComplexReader.java
                  ComplexListWriter.java
                  ComplexListReader.java
            ExampleValue.java
            ExampleValueImpl.java
            SimpleProps.java
            SimplePropsImpl.java
            ArraySimpleProps.java
            ArraySimplePropsImpl.java
            RefValue.java
            RefValueImpl.java
            Referenced.java
            ReferencedImpl.java
            EnumProperties.java
            EnumPropertiesImpl.java
            InSpecEnumProperties.java
            InSpecEnumPropertiesImpl.java
            ValueObjectProps.java
            ValueObjectPropsImpl.java
            Hints.java
            HintsImpl.java
            Noprop.java
            NopropImpl.java
            Binary.java
            BinaryImpl.java
          + json
               ExampleValueWriter.java
               ExampleValueReader.java
               SimplePropsWriter.java
               SimplePropsReader.java
               ArraySimplePropsWriter.java
               ArraySimplePropsReader.java
               RefValueWriter.java
               RefValueReader.java
               ReferencedWriter.java
               ReferencedReader.java
               EnumPropertiesWriter.java
               EnumPropertiesReader.java
               InSpecEnumPropertiesWriter.java
               InSpecEnumPropertiesReader.java
               ValueObjectPropsWriter.java
               ValueObjectPropsReader.java
               HintsWriter.java
               HintsReader.java
               NopropWriter.java
               NopropReader.java
               BinaryWriter.java
               BinaryReader.java
FILE CONTENT - /tmp/junit3070298473759803644/org/generated/json/ExampleValueReader.java
0001 package org.generated.json;
0002 
0003 import com.fasterxml.jackson.core.JsonParser;
0004 import com.fasterxml.jackson.core.JsonToken;
0005 import java.io.IOException;
0006 import java.lang.FunctionalInterface;
0007 import java.lang.String;
0008 import java.util.Arrays;
0009 import java.util.HashSet;
0010 import java.util.LinkedList;
0011 import java.util.List;
0012 import java.util.Set;
0013 import java.util.stream.Collectors;
0014 import org.generated.ExampleValue;
0015 import org.generated.ExampleValue.Builder;
0016 import org.generated.examplevalue.json.ComplexListReader;
0017 import org.generated.examplevalue.json.ComplexReader;
0018 
0019 public class ExampleValueReader {
0020   private static Set PROP_EXPECTEDTOKENS = new HashSet(Arrays.asList(JsonToken.VALUE_STRING));
0021 
0022   public ExampleValue read(JsonParser parser) throws IOException {
0023     if(parser.getCurrentToken() == null) {
0024       parser.nextToken();
0025     }
0026     if(parser.currentToken() == JsonToken.VALUE_NULL) return null;
0027     if(parser.currentToken() != JsonToken.START_OBJECT) {
0028       throw new IOException(
0029                   String.format("reading a %s object, was expecting %s, but was %s",
0030                           ExampleValue.class.getName(), JsonToken.START_OBJECT, parser.currentToken()
0031                   )
0032           );
0033     }
0034     ExampleValue.Builder builder = ExampleValue.builder();
0035     while (parser.nextToken() != JsonToken.END_OBJECT) {
0036       Token token = Token.from(parser.getCurrentName());
0037       if(token != null) {
0038         switch (token) {
0039           case PROP: {
0040             Set<JsonToken> expectedTokens = PROP_EXPECTEDTOKENS;
0041             builder.prop(this.readValue(parser, jsonParser -> jsonParser.getText(), "prop", expectedTokens));
0042             break;
0043           }
0044           case LISTPROP: {
0045             builder.listProp(this.readListValue(parser, jsonParser -> jsonParser.getText(), "listProp"));
0046             break;
0047           }
0048           case COMPLEX: {
0049             parser.nextToken();
0050             builder.complex(new ComplexReader().read(parser));
0051             break;
0052           }
0053           case COMPLEXLIST: {
0054             ComplexListReader reader = new ComplexListReader();
0055             builder.complexList(this.readListValue(parser, jsonParser -> reader.read(jsonParser), "complexList"));
0056             break;
0057           }
0058           default: {
0059             this.consumeUnexpectedProperty(parser);
0060           }
0061         }
0062       } else {
0063         this.consumeUnexpectedProperty(parser);
0064       }
0065     }
0066     return builder.build();
0067   }
0068 
0069   public ExampleValue[] readArray(JsonParser parser) throws IOException {
0070     parser.nextToken();
0071     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0072     if (parser.currentToken() == JsonToken.START_ARRAY) {
0073       LinkedList<ExampleValue> listValue = new LinkedList<>();
0074       while (parser.nextToken() != JsonToken.END_ARRAY) {
0075         if(parser.currentToken() == JsonToken.VALUE_NULL) {
0076           listValue.add(null);
0077         } else {
0078           listValue.add(this.read(parser));
0079         }
0080       }
0081       return listValue.toArray(new ExampleValue[listValue.size()]);
0082     }
0083     throw new IOException(String.format("failed reading org.generated.ExampleValue array, current token was %s", parser.currentToken()));
0084   }
0085 
0086   private <T> T readValue(JsonParser parser, Reader<T> reader, String propertyName, Set<JsonToken> expectedTokens) throws IOException {
0087     parser.nextToken();
0088     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0089     if (expectedTokens.contains(parser.currentToken())) return reader.read(parser);
0090     throw new IOException(
0091             String.format("reading property %s, was expecting %s, but was %s",
0092                 propertyName, expectedTokens, parser.currentToken()
0093             )
0094         );
0095   }
0096 
0097   private <T> List<T> readListValue(JsonParser parser, Reader<T> reader, String propertyName) throws IOException {
0098     parser.nextToken();
0099     if (parser.currentToken() == JsonToken.VALUE_NULL) return null;
0100     if (parser.currentToken() == JsonToken.START_ARRAY) {
0101       LinkedList<T> listValue = new LinkedList<>();
0102       while (parser.nextToken() != JsonToken.END_ARRAY) {
0103         if(parser.currentToken() == JsonToken.VALUE_NULL) {
0104           listValue.add(null);
0105         } else {
0106           listValue.add(reader.read(parser));
0107         }
0108       }
0109       return listValue;
0110     }
0111     throw new IOException(
0112                 String.format("reading property %s, was expecting %s, but was %s",
0113                         propertyName, JsonToken.START_ARRAY, parser.currentToken()
0114                 )
0115         );
0116   }
0117 
0118   private void consumeUnexpectedProperty(JsonParser parser) throws IOException {
0119     parser.nextToken();
0120     if(parser.currentToken().isStructStart()) {
0121       int level = 1;
0122       do {
0123         parser.nextToken();
0124         if (parser.currentToken().isStructStart()) {
0125           level++;
0126         } if (parser.currentToken().isStructEnd()) {
0127           level--;
0128         }
0129       } while(level > 0);
0130     }
0131   }
0132 
0133   @FunctionalInterface
0134   private interface Reader<T> {
0135     T read(JsonParser parser) throws IOException;
0136   }
0137 
0138   enum Token {
0139     __UNKNOWN__("__UNKNOWN__", "__UNKNOWN__"),
0140 
0141     PROP("prop", "prop"),
0142 
0143     LISTPROP("listProp", "listProp"),
0144 
0145     COMPLEX("complex", "complex"),
0146 
0147     COMPLEXLIST("complexList", "complexList");
0148 
0149     private final String name;
0150 
0151     private final String rawName;
0152 
0153     Token(String name, String rawName) {
0154       this.name = name;
0155       this.rawName = rawName;
0156     }
0157 
0158     private static String normalizeFieldName(String fieldName) {
0159       if(fieldName == null) return null;
0160       if(fieldName.trim().equals("")) return "";
0161       fieldName = Arrays.stream(fieldName.split("(\\s|-)+")).map(s -> s.substring(0, 1).toUpperCase() + s.substring(1)).collect(Collectors.joining());
0162       fieldName =  fieldName.substring(0, 1).toLowerCase() + fieldName.substring(1);
0163       return fieldName;
0164     }
0165 
0166     public static Token from(String str) {
0167       for(Token token : Token.values()) {
0168         if(token.name.equals(str)) {
0169           return token;
0170         } else if(token.rawName.equals(str)) {
0171           return token;
0172         } else if(token.name.equals(normalizeFieldName(str))) {
0173           return token;
0174         } else if(token.rawName.equals(normalizeFieldName(str))) {
0175           return token;
0176         }
0177       }
0178       return __UNKNOWN__;
0179     }
0180   }
0181 }
--------------------------------
Tests run: 30, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.474 sec - in org.codingmatters.value.objects.json.JsonReaderGenerationTest
Running org.codingmatters.value.objects.json.JsonWriterGenerationTest
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.671 sec - in org.codingmatters.value.objects.json.JsonWriterGenerationTest
Running org.codingmatters.value.objects.json.FieldNameNormalizerFunctionTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.codingmatters.value.objects.json.FieldNameNormalizerFunctionTest

Results :

Tests run: 61, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building org.codingmatters.value.objects:cdm-value-objects-doc 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cdm-value-objects-doc ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-doc/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-doc ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cdm-value-objects-doc ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-doc/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-doc ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-doc ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-doc/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.codingmatters.value.objects.PumlClassFromSpecGeneratorTest
generated : /tmp/junit6746682150265064437/org.generated.classes.svg [org.generated.classes.puml] (2 entities)
generated : /tmp/junit6746682150265064437/org.generated.value.classes.svg [org.generated.value.classes.puml] (2 entities)
generated : /tmp/junit6746682150265064437/junit1786049832106583575/org.generated.classes.png [org.generated.classes.puml] (2 entities)
generated : /tmp/junit4362620834203692167/org.generated.classes.svg [org.generated.classes.puml] (Empty)
generated : /tmp/junit4362620834203692167/junit5715217076292222167/org.generated.classes.png [org.generated.classes.puml] (Empty)
generated : /tmp/junit7265679969536987614/org.generated.classes.svg [org.generated.classes.puml] (4 entities)
generated : /tmp/junit7265679969536987614/org.generated.value.classes.svg [org.generated.value.classes.puml] (4 entities)
generated : /tmp/junit7265679969536987614/junit1331254744209278451/org.generated.classes.png [org.generated.classes.puml] (4 entities)
generated : /tmp/junit5711216052965987488/org.generated.classes.svg [org.generated.classes.puml] (1 entities)
generated : /tmp/junit5711216052965987488/org.generated.value.classes.svg [org.generated.value.classes.puml] (1 entities)
generated : /tmp/junit5711216052965987488/junit8073235475430022087/org.generated.classes.png [org.generated.classes.puml] (1 entities)
generated : /tmp/junit8294041266001102107/org.generated.classes.svg [org.generated.classes.puml] (2 entities)
generated : /tmp/junit8294041266001102107/org.generated.value.classes.svg [org.generated.value.classes.puml] (2 entities)
generated : /tmp/junit8294041266001102107/junit1008809602923132510/org.generated.classes.png [org.generated.classes.puml] (2 entities)
generated : /tmp/junit2495509630891728125/org.generated.classes.svg [org.generated.classes.puml] (4 entities)
generated : /tmp/junit2495509630891728125/org.generated.value.classes.svg [org.generated.value.classes.puml] (4 entities)
generated : /tmp/junit2495509630891728125/junit4735796850418936634/org.generated.classes.png [org.generated.classes.puml] (4 entities)
generated : /tmp/junit2889043478720005967/org.generated.classes.svg [org.generated.classes.puml] (2 entities)
generated : /tmp/junit2889043478720005967/org.generated.value.classes.svg [org.generated.value.classes.puml] (2 entities)
generated : /tmp/junit2889043478720005967/junit5566629067544554891/org.generated.classes.png [org.generated.classes.puml] (2 entities)
generated : /tmp/junit7258951961904418867/org.generated.classes.svg [org.generated.classes.puml] (1 entities)
generated : /tmp/junit7258951961904418867/org.generated.a value object.classes.svg [org.generated.a value object.classes.puml] (1 entities)
generated : /tmp/junit7258951961904418867/junit8916299909660481795/org.generated.classes.png [org.generated.classes.puml] (1 entities)
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.514 sec - in org.codingmatters.value.objects.PumlClassFromSpecGeneratorTest

Results :

Tests run: 8, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building cdm-value-objects-php 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ cdm-value-objects-php ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ cdm-value-objects-php ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ cdm-value-objects-php ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 9 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:copy-resources (copy-yaml) @ cdm-value-objects-php ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 8 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:copy-resources (copy-composer) @ cdm-value-objects-php ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:copy-resources (copy-tests) @ cdm-value-objects-php ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 6 resources
[INFO] 
[INFO] --- exec-maven-plugin:1.6.0:java (default) @ cdm-value-objects-php ---
Generating in /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/php-test
[INFO] 
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ cdm-value-objects-php ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ cdm-value-objects-php ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.codingmatters.value.objects.php.RunPhpTest
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.186 sec <<< FAILURE! - in org.codingmatters.value.objects.php.RunPhpTest
org.codingmatters.value.objects.php.RunPhpTest  Time elapsed: 0.186 sec  <<< ERROR!
java.io.IOException: Cannot run program "composer" (in directory "/scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/php-test"): error=2, No such file or directory
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	at org.codingmatters.value.objects.php.RunPhpTest.setUp(RunPhpTest.java:25)

Running org.codingmatters.value.objects.php.SpecProcessorTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.418 sec - in org.codingmatters.value.objects.php.SpecProcessorTest

Results :

Tests in error: 
  RunPhpTest.setUp:25 » IO Cannot run program "composer" (in directory "/scratch...

Tests run: 8, Failures: 0, Errors: 1, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Value Objects Generator ............................ SUCCESS [  0.006 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-parent SUCCESS [  0.001 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-bom SUCCESS [  0.000 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-spec SUCCESS [  5.835 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation-commons SUCCESS [  0.071 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation SUCCESS [ 18.017 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-generation-main SUCCESS [  0.059 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-json SUCCESS [ 46.227 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-doc SUCCESS [  8.148 s]
[INFO] cdm-value-objects-php .............................. FAILURE [  2.287 s]
[INFO] org.codingmatters.value.objects:cdm-value-objects-maven-plugin SKIPPED
[INFO] org.codingmatters.value.objects:cdm-value-objects-values SKIPPED
[INFO] org.codingmatters.value.objects:cdm-value-objects-demo SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:21 min
[INFO] Finished at: 2020-03-19T10:54:50+01:00
[INFO] Final Memory: 25M/67M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.17:test (default-test) on project cdm-value-objects-php: There are test failures.
[ERROR] 
[ERROR] Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.17:test (default-test) on project cdm-value-objects-php: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/surefire-reports for the individual test results.
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoFailureException: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-flexiooss-codingmatters-value-objects-422424048-20180830-094818-firstCommit/cdm-value-objects-php/target/surefire-reports for the individual test results.
	at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:82)
	at org.apache.maven.plugin.surefire.SurefirePlugin.handleSummary(SurefirePlugin.java:195)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:861)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:729)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	... 20 more
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :cdm-value-objects-php
