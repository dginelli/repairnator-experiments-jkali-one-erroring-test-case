[
  {
    "comments": [
      {
        "value": "# language: en",
        "line": 1
      }
    ],
    "keyword": "Feature",
    "name": "Open Blocks",
    "line": 2,
    "description": "In order to group content in a generic container\nAs a writer\nI want to be able to wrap content in an open block",
    "id": "open-blocks",
    "uri": "features/open_block.feature",
    "elements": [
      {
        "keyword": "Scenario",
        "name": "Render an open block that contains a paragraph to HTML",
        "line": 8,
        "description": "",
        "id": "open-blocks;render-an-open-block-that-contains-a-paragraph-to-html",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 9,
            "doc_string": {
              "value": "--\nA paragraph in an open block.\n--",
              "content_type": "",
              "line": 10
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 419009
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 15,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 8482003
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 16,
            "doc_string": {
              "value": "<div class=\"openblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>A paragraph in an open block.</p>\n</div>\n</div>\n</div>",
              "content_type": "",
              "line": 17
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 355644
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render an open block that contains a paragraph to DocBook",
        "line": 28,
        "description": "",
        "id": "open-blocks;render-an-open-block-that-contains-a-paragraph-to-docbook",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 29,
            "doc_string": {
              "value": "--\nA paragraph in an open block.\n--",
              "content_type": "",
              "line": 30
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 279722
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to docbook",
            "line": 35,
            "match": {
              "location": "features/step_definitions.rb:28"
            },
            "result": {
              "status": "passed",
              "duration": 3550872
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the XML source",
            "line": 36,
            "doc_string": {
              "value": "<simpara>A paragraph in an open block.</simpara>",
              "content_type": "",
              "line": 37
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "XML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 331192
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render an open block that contains a paragraph to HTML (alt)",
        "line": 42,
        "description": "",
        "id": "open-blocks;render-an-open-block-that-contains-a-paragraph-to-html-(alt)",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 43,
            "doc_string": {
              "value": "--\nA paragraph in an open block.\n--",
              "content_type": "",
              "line": 44
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 325968
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 49,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 542344
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 50,
            "doc_string": {
              "value": ".openblock\n  .content\n    .paragraph\n      p A paragraph in an open block.",
              "content_type": "",
              "line": 51
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 19815450
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render an open block that contains a paragraph to DocBook (alt)",
        "line": 59,
        "description": "",
        "id": "open-blocks;render-an-open-block-that-contains-a-paragraph-to-docbook-(alt)",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 60,
            "doc_string": {
              "value": "--\nA paragraph in an open block.\n--",
              "content_type": "",
              "line": 61
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 269015
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to docbook",
            "line": 66,
            "match": {
              "location": "features/step_definitions.rb:28"
            },
            "result": {
              "status": "passed",
              "duration": 665413
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the XML structure",
            "line": 67,
            "doc_string": {
              "value": "simpara A paragraph in an open block.",
              "content_type": "",
              "line": 68
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "XML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 3266919
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render an open block that contains a list to HTML",
        "line": 73,
        "description": "",
        "id": "open-blocks;render-an-open-block-that-contains-a-list-to-html",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 74,
            "doc_string": {
              "value": "--\n* one\n* two\n* three\n--",
              "content_type": "",
              "line": 75
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 302576
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 82,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 740436
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 83,
            "doc_string": {
              "value": ".openblock\n  .content\n    .ulist\n      ul\n        li: p one\n        li: p two\n        li: p three",
              "content_type": "",
              "line": 84
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 4474752
            }
          }
        ]
      }
    ]
  },
  {
    "comments": [
      {
        "value": "# language: en",
        "line": 1
      }
    ],
    "keyword": "Feature",
    "name": "Open Blocks",
    "line": 2,
    "description": "In order to pass content through unprocessed\nAs a writer\nI want to be able to mark passthrough content using a pass block",
    "id": "open-blocks",
    "uri": "features/pass_block.feature",
    "elements": [
      {
        "keyword": "Scenario",
        "name": "Render a pass block without performing substitutions by default to HTML",
        "line": 8,
        "description": "",
        "id": "open-blocks;render-a-pass-block-without-performing-substitutions-by-default-to-html",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 9,
            "doc_string": {
              "value": ":name: value\n\n++++\n<p>{name}</p>\n\nimage:tiger.png[]\n++++",
              "content_type": "",
              "line": 10
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 287609
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 19,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 584068
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 20,
            "doc_string": {
              "value": "<p>{name}</p>\n\nimage:tiger.png[]",
              "content_type": "",
              "line": 21
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 281433
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render a pass block without performing substitutions by default to DocBook",
        "line": 28,
        "description": "",
        "id": "open-blocks;render-a-pass-block-without-performing-substitutions-by-default-to-docbook",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 29,
            "doc_string": {
              "value": ":name: value\n\n++++\n<simpara>{name}</simpara>\n\nimage:tiger.png[]\n++++",
              "content_type": "",
              "line": 30
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 268703
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to docbook",
            "line": 39,
            "match": {
              "location": "features/step_definitions.rb:28"
            },
            "result": {
              "status": "passed",
              "duration": 455875
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the XML source",
            "line": 40,
            "doc_string": {
              "value": "<simpara>{name}</simpara>\n\nimage:tiger.png[]",
              "content_type": "",
              "line": 41
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "XML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 282351
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Render a pass block performing explicit substitutions to HTML",
        "line": 48,
        "description": "",
        "id": "open-blocks;render-a-pass-block-performing-explicit-substitutions-to-html",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 49,
            "doc_string": {
              "value": ":name: value\n\n[subs=\"attributes,macros\"]\n++++\n<p>{name}</p>\n\nimage:tiger.png[]\n++++",
              "content_type": "",
              "line": 50
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 279512
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 60,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 689396
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 61,
            "doc_string": {
              "value": "<p>value</p>\n\n<span class=\"image\"><img src=\"tiger.png\" alt=\"tiger\"></span>",
              "content_type": "",
              "line": 62
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 272666
            }
          }
        ]
      }
    ]
  },
  {
    "comments": [
      {
        "value": "# language: en",
        "line": 1
      }
    ],
    "keyword": "Feature",
    "name": "Text Formatting",
    "line": 2,
    "description": "In order to apply formatting to the text\nAs a writer\nI want to be able to markup inline text with formatting characters",
    "id": "text-formatting",
    "uri": "features/text_formatting.feature",
    "elements": [
      {
        "keyword": "Scenario",
        "name": "Convert text that contains superscript and subscript characters",
        "line": 8,
        "description": "",
        "id": "text-formatting;convert-text-that-contains-superscript-and-subscript-characters",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 9,
            "doc_string": {
              "value": "_v_~rocket~ is the value\n^3^He is the isotope\nlog~4~x^n^ is the expression\nM^me^ White is the address\nthe 10^th^ point has coordinate (x~10~, y~10~)",
              "content_type": "",
              "line": 10
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 280422
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 17,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 690835
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 18,
            "doc_string": {
              "value": "<div class=\"paragraph\">\n<p><em>v</em><sub>rocket</sub> is the value\n<sup>3</sup>He is the isotope\nlog<sub>4</sub>x<sup>n</sup> is the expression\nM<sup>me</sup> White is the address\nthe 10<sup>th</sup> point has coordinate (x<sub>10</sub>, y<sub>10</sub>)</p>\n</div>",
              "content_type": "",
              "line": 19
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 289971
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Convert text that has ex-inline literal formatting",
        "line": 30,
        "description": "",
        "id": "text-formatting;convert-text-that-has-ex-inline-literal-formatting",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 31,
            "doc_string": {
              "value": "Use [x-]`{asciidoctor-version}` to print the version of Asciidoctor.",
              "content_type": "",
              "line": 32
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 272968
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 35,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 515374
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 36,
            "doc_string": {
              "value": "<div class=\"paragraph\">\n<p>Use <code>{asciidoctor-version}</code> to print the version of Asciidoctor.</p>\n</div>",
              "content_type": "",
              "line": 37
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 276682
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Convert text that has ex-inline monospaced formatting",
        "line": 44,
        "description": "",
        "id": "text-formatting;convert-text-that-has-ex-inline-monospaced-formatting",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 45,
            "doc_string": {
              "value": "The document is assumed to be encoded as [x-]+{encoding}+.",
              "content_type": "",
              "line": 46
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 288854
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 49,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 532262
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML source",
            "line": 50,
            "doc_string": {
              "value": "<div class=\"paragraph\">\n<p>The document is assumed to be encoded as <code>UTF-8</code>.</p>\n</div>",
              "content_type": "",
              "line": 51
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:32"
            },
            "result": {
              "status": "passed",
              "duration": 284519
            }
          }
        ]
      }
    ]
  },
  {
    "comments": [
      {
        "value": "# language: en",
        "line": 1
      }
    ],
    "keyword": "Feature",
    "name": "Cross References",
    "line": 2,
    "description": "In order to create links to other sections\nAs a writer\nI want to be able to use a cross reference macro",
    "id": "cross-references",
    "uri": "features/xref.feature",
    "elements": [
      {
        "keyword": "Scenario",
        "name": "Create a cross reference from an AsciiDoc cell to a section",
        "line": 8,
        "description": "",
        "id": "cross-references;create-a-cross-reference-from-an-asciidoc-cell-to-a-section",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 9,
            "doc_string": {
              "value": "|===\na|See <<_install>>\n|===\n\n== Install\n\nInstructions go here.",
              "content_type": "",
              "line": 10
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 275267
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 19,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 2697955
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 20,
            "doc_string": {
              "value": "table.tableblock.frame-all.grid-all.spread\n  colgroup\n    col style='width: 100%;'\n  tbody\n    tr\n      td.tableblock.halign-left.valign-top\n        div\n          .paragraph: p\n            'See\n            a href='#_install' Install\n.sect1\n  h2#_install Install\n  .sectionbody\n    .paragraph: p Instructions go here.",
              "content_type": "",
              "line": 21
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 5834941
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Create a cross reference using the target section title",
        "line": 39,
        "description": "",
        "id": "cross-references;create-a-cross-reference-using-the-target-section-title",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 40,
            "doc_string": {
              "value": "== Section One\n\ncontent\n\n== Section Two\n\nrefer to <<Section One>>",
              "content_type": "",
              "line": 41
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 317793
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 50,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 922428
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 51,
            "doc_string": {
              "value": ".sect1\n  h2#_section_one Section One\n  .sectionbody: .paragraph: p content\n.sect1\n  h2#_section_two Section Two\n  .sectionbody: .paragraph: p\n    'refer to\n    a href='#_section_one' Section One",
              "content_type": "",
              "line": 52
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 4781147
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Create a cross reference using the target reftext",
        "line": 64,
        "description": "",
        "id": "cross-references;create-a-cross-reference-using-the-target-reftext",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 65,
            "doc_string": {
              "value": "[reftext=\"the first section\"]\n== Section One\n\ncontent\n\n== Section Two\n\nrefer to <<the first section>>",
              "content_type": "",
              "line": 66
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 279470
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 76,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 918523
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 77,
            "doc_string": {
              "value": ".sect1\n  h2#_section_one Section One\n  .sectionbody: .paragraph: p content\n.sect1\n  h2#_section_two Section Two\n  .sectionbody: .paragraph: p\n    'refer to\n    a href='#_section_one' the first section",
              "content_type": "",
              "line": 78
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 5352892
            }
          }
        ]
      },
      {
        "keyword": "Scenario",
        "name": "Create a cross reference using the formatted target title",
        "line": 90,
        "description": "",
        "id": "cross-references;create-a-cross-reference-using-the-formatted-target-title",
        "type": "scenario",
        "steps": [
          {
            "keyword": "Given ",
            "name": "the AsciiDoc source",
            "line": 91,
            "doc_string": {
              "value": "== Section *One*\n\ncontent\n\n== Section Two\n\nrefer to <<Section *One*>>",
              "content_type": "",
              "line": 92
            },
            "match": {
              "location": "features/step_definitions.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 293200
            }
          },
          {
            "keyword": "When ",
            "name": "it is converted to html",
            "line": 101,
            "match": {
              "location": "features/step_definitions.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 1018824
            }
          },
          {
            "keyword": "Then ",
            "name": "the result should match the HTML structure",
            "line": 102,
            "doc_string": {
              "value": ".sect1\n  h2#_section_strong_one_strong\n    'Section\n    strong One\n  .sectionbody: .paragraph: p content\n.sect1\n  h2#_section_two Section Two\n  .sectionbody: .paragraph: p\n    'refer to\n    a href='#_section_strong_one_strong'\n      'Section\n      strong One",
              "content_type": "",
              "line": 103
            },
            "match": {
              "arguments": [
                {
                  "offset": 28,
                  "val": "HTML"
                }
              ],
              "location": "features/step_definitions.rb:36"
            },
            "result": {
              "status": "passed",
              "duration": 5909260
            }
          }
        ]
      }
    ]
  }
]