CREATE TABLE gearbox(
  id SERIAL PRIMARY KEY ,
  type VARCHAR(50)
);
INSERT INTO gearbox(type) VALUES ('механическая'),
  ('автомат');
SELECT * FROM gearbox;

CREATE TABLE transmission(
  id SERIAL PRIMARY KEY ,
  drive VARCHAR(50)
);

INSERT INTO transmission (drive) VALUES ('передний'),('задний');
INSERT INTO transmission (drive) VALUES ('4x4');

SELECT *
FROM transmission;
CREATE TABLE engine(
  id SERIAL PRIMARY KEY,
  volume INTEGER,
  type VARCHAR(50)
);

INSERT INTO engine (volume, type) VALUES (2000, 'disel'),(1800,'disel'),(1400, 'gaz'),(1800,'benzin');
SELECT * FROM engine;

CREATE TABLE car(
  id SERIAL PRIMARY KEY ,
  name VARCHAR(50),
  id_gearbox INTEGER REFERENCES gearbox(id),
  id_transmission INTEGER REFERENCES transmission(id),
  id_engie INTEGER REFERENCES engine(id)
);
INSERT INTO car(name, id_gearbox, id_transmission, id_engie) VALUES ('Volkswagen',1,1,3),
  ('Mercedes-Benz',1,2,1),
  ('Lda',1,1,4);
SELECT *FROM car;

--Первый запрос выводит все машины
SELECT car.name, gearbox.type,transmission.drive,engine.type,engine.volume
FROM car LEFT JOIN gearbox
    ON car.id_gearbox = gearbox.id
LEFT JOIN transmission
    ON car.id_transmission = transmission.id
    LEFT JOIN engine ON car.id_engie = engine.id;

--выводим тип каробки передачь которой нет в имеющихся машинах
SELECT gearbox.type
FROM car  RIGHT Outer JOIN  gearbox
    ON car.id_gearbox = gearbox.id
  WHERE car.id IS NULL;

--выводим тип неиспользуемой трансмисии
SELECT transmission.drive
FROM car RIGHT JOIN transmission
    ON car.id_transmission = transmission.id
WHERE car.id IS NULL ;

--выводим тип неиспользуешегося двигателя
SELECT e.type
FROM car AS c RIGHT JOIN engine As e
  ON c.id_engie = e.id
WHERE c.id IS NULL ;
--запросы короткие, AS использовать можно, но пока вникаю так более информативней 