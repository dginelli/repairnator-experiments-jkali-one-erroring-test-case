[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 28
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/druid/java-util/0.13.0-SNAPSHOT/java-util-0.13.0-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/skife/config/config-magic/0.9/config-magic-0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/joda-time/joda-time/2.9.9/joda-time-2.9.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/mozilla/rhino/1.7R5/rhino-1.7R5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/jayway/jsonpath/json-path/2.1.0/json-path-2.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client/2.0.37/async-http-client-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client-netty-utils/2.0.37/async-http-client-netty-utils-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-buffer/4.0.52.Final/netty-buffer-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec-http/4.0.52.Final/netty-codec-http-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec/4.0.52.Final/netty-codec-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-handler/4.0.52.Final/netty-handler-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport/4.0.52.Final/netty-transport-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.52.Final/netty-transport-native-epoll-4.0.52.Final-linux-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-common/4.0.52.Final/netty-common-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver-dns/2.0.37/netty-resolver-dns-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver/2.0.37/netty-resolver-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-codec-dns/2.0.37/netty-codec-dns-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/reactivestreams/reactive-streams/1.0.0/reactive-streams-1.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/typesafe/netty/netty-reactive-streams/1.0.8/netty-reactive-streams-1.0.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/gridkit/lab/jvm-attach-api/1.2/jvm-attach-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/guice/4.1.0/guice-4.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/extensions/guice-multibindings/4.1.0/guice-multibindings-4.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/airlift/airline/0.7/airline-0.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.4.6/jackson-annotations-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.4.6/jackson-core-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.4.6/jackson-databind-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.4.6/jackson-dataformat-smile-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hibernate/hibernate-validator/5.1.3.Final/hibernate-validator-5.1.3.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/thisptr/jackson-jq/0.0.7/jackson-jq-0.0.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/joni/joni/2.1.11/joni-2.1.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/jcodings/jcodings/1.0.13/jcodings-1.0.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/it/unimi/dsi/fastutil/8.1.0/fastutil-8.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/junit/junit/4.11/junit-4.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-1.2-api/2.5/log4j-1.2-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-jul/2.5/log4j-jul-2.5.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 309750 milliseconds (309 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/druid/java-util/0.13.0-SNAPSHOT/java-util-0.13.0-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/skife/config/config-magic/0.9/config-magic-0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/joda-time/joda-time/2.9.9/joda-time-2.9.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/mozilla/rhino/1.7R5/rhino-1.7R5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/jayway/jsonpath/json-path/2.1.0/json-path-2.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client/2.0.37/async-http-client-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client-netty-utils/2.0.37/async-http-client-netty-utils-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-buffer/4.0.52.Final/netty-buffer-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec-http/4.0.52.Final/netty-codec-http-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec/4.0.52.Final/netty-codec-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-handler/4.0.52.Final/netty-handler-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport/4.0.52.Final/netty-transport-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.52.Final/netty-transport-native-epoll-4.0.52.Final-linux-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-common/4.0.52.Final/netty-common-4.0.52.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver-dns/2.0.37/netty-resolver-dns-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver/2.0.37/netty-resolver-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-codec-dns/2.0.37/netty-codec-dns-2.0.37.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/reactivestreams/reactive-streams/1.0.0/reactive-streams-1.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/typesafe/netty/netty-reactive-streams/1.0.8/netty-reactive-streams-1.0.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/gridkit/lab/jvm-attach-api/1.2/jvm-attach-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/guice/4.1.0/guice-4.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/extensions/guice-multibindings/4.1.0/guice-multibindings-4.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/airlift/airline/0.7/airline-0.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.4.6/jackson-annotations-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.4.6/jackson-core-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.4.6/jackson-databind-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.4.6/jackson-dataformat-smile-2.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hibernate/hibernate-validator/5.1.3.Final/hibernate-validator-5.1.3.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/thisptr/jackson-jq/0.0.7/jackson-jq-0.0.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/joni/joni/2.1.11/joni-2.1.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/jcodings/jcodings/1.0.13/jcodings-1.0.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/it/unimi/dsi/fastutil/8.1.0/fastutil-8.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/junit/junit/4.11/junit-4.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-1.2-api/2.5/log4j-1.2-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-jul/2.5/log4j-jul-2.5.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 98
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 263
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 263,  237
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 237
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 237, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/dginelli/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 309750
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/druid/java-util/0.13.0-SNAPSHOT/java-util-0.13.0-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/skife/config/config-magic/0.9/config-magic-0.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/joda-time/joda-time/2.9.9/joda-time-2.9.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/mozilla/rhino/1.7R5/rhino-1.7R5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/jayway/jsonpath/json-path/2.1.0/json-path-2.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client/2.0.37/async-http-client-2.0.37.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/async-http-client-netty-utils/2.0.37/async-http-client-netty-utils-2.0.37.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-buffer/4.0.52.Final/netty-buffer-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec-http/4.0.52.Final/netty-codec-http-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-codec/4.0.52.Final/netty-codec-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-handler/4.0.52.Final/netty-handler-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport/4.0.52.Final/netty-transport-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.52.Final/netty-transport-native-epoll-4.0.52.Final-linux-x86_64.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty-common/4.0.52.Final/netty-common-4.0.52.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver-dns/2.0.37/netty-resolver-dns-2.0.37.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-resolver/2.0.37/netty-resolver-2.0.37.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/asynchttpclient/netty-codec-dns/2.0.37/netty-codec-dns-2.0.37.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/reactivestreams/reactive-streams/1.0.0/reactive-streams-1.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/typesafe/netty/netty-reactive-streams/1.0.8/netty-reactive-streams-1.0.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/gridkit/lab/jvm-attach-api/1.2/jvm-attach-api-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/guice/4.1.0/guice-4.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/inject/extensions/guice-multibindings/4.1.0/guice-multibindings-4.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/io/airlift/airline/0.7/airline-0.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.4.6/jackson-annotations-2.4.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.4.6/jackson-core-2.4.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.4.6/jackson-databind-2.4.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.4.6/jackson-dataformat-smile-2.4.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hibernate/hibernate-validator/5.1.3.Final/hibernate-validator-5.1.3.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/net/thisptr/jackson-jq/0.0.7/jackson-jq-0.0.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/joni/joni/2.1.11/joni-2.1.11.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/jruby/jcodings/jcodings/1.0.13/jcodings-1.0.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/it/unimi/dsi/fastutil/8.1.0/fastutil-8.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/junit/junit/4.11/junit-4.11.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-api/2.5/log4j-api-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-core/2.5/log4j-core-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-slf4j-impl/2.5/log4j-slf4j-impl-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-1.2-api/2.5/log4j-1.2-api-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/.m2/org/apache/logging/log4j/log4j-jul/2.5/log4j-jul-2.5.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-druid-io-druid-346901175-20180227-194810-firstCommit/api
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wait) { 	fetchFuture.get(fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS); 	fetchFuture[...] ` -topatch--> `if (true) { 	this.fetchFuture.get(this.fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS); 	t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wait) { 	fetchFuture.get(fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS); 	fetchFuture[...] ` -topatch--> `if (false) { 	this.fetchFuture.get(this.fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (wait) { 	fetchFuture.get(fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS); 	fetchFuture[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fetchFuture != null) && fetchFuture.isDone()) { 	fetchFuture.get(); 	fetchFuture = null; } ` -topatch--> `if (true) { 	this.fetchFuture.get(); 	this.fetchFuture = null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fetchFuture != null) && fetchFuture.isDone()) { 	fetchFuture.get(); 	fetchFuture = null; } ` -topatch--> `if (false) { 	this.fetchFuture.get(); 	this.fetchFuture = null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((fetchFuture != null) && fetchFuture.isDone()) { 	fetchFuture.get(); 	fetchFuture = null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cacheManager = cacheManager ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 115, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.objects = objects ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 116, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.fetchExecutor = fetchExecutor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 117, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.temporaryDirectory = temporaryDirectory ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 118, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxFetchCapacityBytes = maxFetchCapacityBytes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 119, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prefetchTriggerBytes = prefetchTriggerBytes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.fetchTimeout = fetchTimeout ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxFetchRetry = maxFetchRetry ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 122, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.openObjectFunction = openObjectFunction ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.retryCondition = retryCondition ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.buffer = new byte[io.druid.data.input.impl.prefetch.Fetcher.BUFFER_SIZE] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prefetchEnabled = maxFetchCapacityBytes > 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 127, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numRemainingObjects = objects.size() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.fetchedFiles.addAll(cacheManager.getFiles()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 131, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.nextFetchIndex = fetchedFiles.size() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || prefetchEnabled) { 	com.google.common.base.Preconditions.checkNotNul[...] ` -topatch--> `if (true) { 	com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirecto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || prefetchEnabled) { 	com.google.common.base.Preconditions.checkNotNul[...] ` -topatch--> `if (false) { 	com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirect[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || prefetchEnabled) { 	com.google.common.base.Preconditions.checkNotNul[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prefetchEnabled) { 	fetchIfNeeded(0L); } ` -topatch--> `if (true) { 	fetchIfNeeded(0L); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (prefetchEnabled) { 	fetchIfNeeded(0L); } ` -topatch--> `if (false) { 	fetchIfNeeded(0L); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (prefetchEnabled) { 	fetchIfNeeded(0L); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 216, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (true) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 216, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (false) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 216, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 222, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `checkFetchException(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 49, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxCacheCapacityBytes = maxCacheCapacityBytes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.closer = closer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.parser = parser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.lineIterators = lineIterators ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 66, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (((lineIterator == null) || (!lineIterator.hasNext())) && lineIterators.hasNext()) { 	lineIter[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cacheManager = new io.druid.data.input.impl.prefetch.CacheManager<>( maxCacheCapacityBytes == n[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 117, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxFetchCapacityBytes = (maxFetchCapacityBytes == null) ?  io.druid.data.input.impl.prefetch.Pr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.prefetchTriggerBytes = (prefetchTriggerBytes == null) ?  this.maxFetchCapacityBytes / 2 :  pref[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxFetchRetry = (maxFetchRetry == null) ? io.druid.data.input.impl.prefetch.PrefetchableTextFil[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.fetchTimeout = (fetchTimeout == null) ? io.druid.data.input.impl.prefetch.PrefetchableTextFiles[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `if (true) { 	this.lineIterator.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `if (false) { 	this.lineIterator.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `if (true) { 	this.lineIterator.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `if (false) { 	this.lineIterator.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lineIterator != null) { 	lineIterator.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (objects == null) { 	objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.b[...] ` -topatch--> `if (true) { 	this.objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.base.Pr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (objects == null) { 	objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.b[...] ` -topatch--> `if (false) { 	this.objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.base.P[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (objects == null) { 	objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || (maxFetchCapacityBytes > 0)) { 	com.google.common.base.Preconditions[...] ` -topatch--> `if (true) { 	com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirecto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || (maxFetchCapacityBytes > 0)) { 	com.google.common.base.Preconditions[...] ` -topatch--> `if (false) { 	com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirect[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.isEnabled() || (maxFetchCapacityBytes > 0)) { 	com.google.common.base.Preconditions[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 167, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `objects = com.google.common.collect.ImmutableList.copyOf(com.google.common.base.Preconditions.checkN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 121, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `closer.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closer != null) { 	closer.close(); } ` -topatch--> `if (true) { 	this.closer.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closer != null) { 	closer.close(); } ` -topatch--> `if (false) { 	this.closer.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (closer != null) { 	closer.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 184, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory.LOG.info("Create a new fireho[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (true) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (false) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasNext()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 250, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchExecutor.shutdownNow() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 252, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkState(fetchExecutor.awaitTermination(fetchTimeout, java.ut[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirectory") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 168, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (; (nextFetchIndex < objects.size()) && (fetchedBytes.get() <= maxFetchCapacityBytes); nextFetch[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 189, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return io.druid.java.util.common.RetryUtils.retry(() ->  { 	try (final java.io.InputStream is = open[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 172, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkArgument( temporaryDirectory.exists(),  "temporaryDirector[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 171, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkNotNull(temporaryDirectory, "temporaryDirectory") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 177, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkArgument( temporaryDirectory.isDirectory(),  "temporaryDir[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `parser.startFileFromBeginning() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 141, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `initializeParser() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 227, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return openedObject ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 67, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lineIterator = getNextLineIterator() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:179) - The Process that runs JUnit test cases did not terminate within waitTime of 309 seconds
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - Killed the Process that runs JUnit test cases 558243
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasMore()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (true) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasMore()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `if (false) { 	throw new java.util.NoSuchElementException(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasMore()) { 	throw new java.util.NoSuchElementException(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lineIterator.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 91, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `parser.startFileFromBeginning() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.FileIteratingFirehose line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lineIterator.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 233, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stream = wrapObjectStream( openedObject.getObject(),  openedObject.getObjectStream()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 289, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceCloser = resourceCloser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory line: 297, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resourceCloser.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.OpenedObject line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.object = object ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.OpenedObject line: 54, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceCloser = resourceCloser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.OpenedObject line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.objectStream = objectStream ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!fetchedFiles.isEmpty()) {  	fetchedFile = fetchedFiles.poll(); } else {  	try { 		fetchIfNeeded[...] ` -topatch--> `if (true) {  	fetchedFile = this.fetchedFiles.poll(); } else {  	try { 		fetchIfNeeded(this.fetchedB[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!fetchedFiles.isEmpty()) {  	fetchedFile = fetchedFiles.poll(); } else {  	try { 		fetchIfNeeded[...] ` -topatch--> `if (false) {  	fetchedFile = this.fetchedFiles.poll(); } else {  	try { 		fetchIfNeeded(this.fetched[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!fetchedFiles.isEmpty()) {  	fetchedFile = fetchedFiles.poll(); } else {  	try { 		fetchIfNeeded[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 263, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchIfNeeded(fetchedBytes.get()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 264, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `fetchedFile = fetchedFiles.poll(fetchTimeout, java.util.concurrent.TimeUnit.MILLISECONDS) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) {  	checkFetchException(true);  	throw new java.lang.RuntimeException(new j[...] ` -topatch--> `if (true) {  	checkFetchException(true);  	throw new java.lang.RuntimeException(new java.util.concur[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) {  	checkFetchException(true);  	throw new java.lang.RuntimeException(new j[...] ` -topatch--> `if (false) {  	checkFetchException(true);  	throw new java.lang.RuntimeException(new java.util.concu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) {  	checkFetchException(true);  	throw new java.lang.RuntimeException(new j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 317, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) { 	final io.druid.data.input.impl.prefetch.FetchedFile<T> cachedFile =[...] ` -topatch--> `if (true) { 	final io.druid.data.input.impl.prefetch.FetchedFile<T> cachedFile = this.cacheManager.c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 317, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) { 	final io.druid.data.input.impl.prefetch.FetchedFile<T> cachedFile =[...] ` -topatch--> `if (false) { 	final io.druid.data.input.impl.prefetch.FetchedFile<T> cachedFile = this.cacheManager.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 317, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) { 	final io.druid.data.input.impl.prefetch.FetchedFile<T> cachedFile =[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 138, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchIfNeeded(0L) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((fetchFuture == null) || fetchFuture.isDone()) &&  (remainingBytes <= prefetchTriggerBytes)) { [...] ` -topatch--> `if (true)  { 	this.fetchFuture = this.fetchExecutor.submit(() -> { 		fetch(); 		return null; 	}); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((fetchFuture == null) || fetchFuture.isDone()) &&  (remainingBytes <= prefetchTriggerBytes)) { [...] ` -topatch--> `if (false)  { 	this.fetchFuture = this.fetchExecutor.submit(() -> { 		fetch(); 		return null; 	}); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 147, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((fetchFuture == null) || fetchFuture.isDone()) &&  (remainingBytes <= prefetchTriggerBytes)) { [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 149, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `fetchFuture = fetchExecutor.submit(() -> { 	fetch(); 	return null; }) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 193, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.apache.commons.io.IOUtils.copyLarge(is, os, buffer) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.OpenedObject line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(fetchedFile.getObject(), org.apache.commons.io.FileUtils.openInputStream(fetchedFile.getFile())[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.FetchedFile line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.object = object ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.FetchedFile line: 41, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceCloser = resourceCloser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.FetchedFile line: 40, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.file = file ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 321, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchedBytes.addAndGet(-fetchedFile.length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 322, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return cachedFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!cacheable()) { 	throw new io.druid.java.util.common.ISE( 	"Cache space is full. totalCachedByte[...] ` -topatch--> `if (true) { 	throw new io.druid.java.util.common.ISE( 	"Cache space is full. totalCachedBytes[%d], m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!cacheable()) { 	throw new io.druid.java.util.common.ISE( 	"Cache space is full. totalCachedByte[...] ` -topatch--> `if (false) { 	throw new io.druid.java.util.common.ISE( 	"Cache space is full. totalCachedBytes[%d], [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!cacheable()) { 	throw new io.druid.java.util.common.ISE( 	"Cache space is full. totalCachedByte[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 76, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `totalCachedBytes += cachedFile.length() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.data.input.impl.prefetch.CacheManager.LOG.info("Object[%s] is cached. Current cached bytes [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.CacheManager line: 75, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `files.add(cachedFile) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `extracted = ctx.lastDateTime ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `initializeParser() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (theMap == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (theMap == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (theMap == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 241, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchFuture.get() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 242, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `fetchFuture = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 278, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchIfNeeded(fetchedBytes.get()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 324, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return fetchedFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 340, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `file.delete() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 341, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetchedBytes.addAndGet(-fileSize) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetch() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 151, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 80, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return java.util.Collections.singletonList(java.lang.String.valueOf(inputValue)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.MapBasedInputRow line: 43, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimensions = dimensions ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) {   	parser = parseSpec.makeParser(); } ` -topatch--> `if (true) {   	this.parser = this.parseSpec.makeParser(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) {   	parser = parseSpec.makeParser(); } ` -topatch--> `if (false) {   	this.parser = this.parseSpec.makeParser(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringInputRowParser line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) {   	parser = parseSpec.makeParser(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.MapBasedRow line: 54, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(io.druid.java.util.common.DateTimes.utc(timestamp), event) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.MapInputRowParser line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp == null) { 	final java.lang.String input = theMap.toString(); 	throw new java.lang.Nul[...] ` -topatch--> `if (true) { 	final java.lang.String input = theMap.toString(); 	throw new java.lang.NullPointerExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.MapInputRowParser line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp == null) { 	final java.lang.String input = theMap.toString(); 	throw new java.lang.Nul[...] ` -topatch--> `if (false) { 	final java.lang.String input = theMap.toString(); 	throw new java.lang.NullPointerExce[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.MapInputRowParser line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (timestamp == null) { 	final java.lang.String input = theMap.toString(); 	throw new java.lang.Nul[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.MapInputRowParser line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `timestamp = parseSpec.getTimestampSpec().extractTimestamp(theMap) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue instanceof java.util.List) {  	final java.util.List<java.lang.Object> values = ((java[...] ` -topatch--> `if (true) {  	final java.util.List<java.lang.Object> values = ((java.util.List) (inputValue));  	fin[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue instanceof java.util.List) {  	final java.util.List<java.lang.Object> values = ((java[...] ` -topatch--> `if (false) {  	final java.util.List<java.lang.Object> values = ((java.util.List) (inputValue));  	fi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue instanceof java.util.List) {  	final java.util.List<java.lang.Object> values = ((java[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue == null) { 	return java.util.Collections.emptyList(); } else 	if (inputValue instance[...] ` -topatch--> `if (true) { 	return java.util.Collections.emptyList(); } else { 	if (inputValue instanceof java.util[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue == null) { 	return java.util.Collections.emptyList(); } else 	if (inputValue instance[...] ` -topatch--> `if (false) { 	return java.util.Collections.emptyList(); } else { 	if (inputValue instanceof java.uti[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.Rows line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inputValue == null) { 	return java.util.Collections.emptyList(); } else 	if (inputValue instance[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.MapBasedRow line: 46, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.event = event ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.MapBasedRow line: 45, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.timestamp = timestamp ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 259, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `fetchedFile = fetchedFiles.poll() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 110, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.data.input.impl.TimestampSpec.parseCtx.set(newCtx) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 109, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newCtx.lastDateTime = extracted ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 108, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newCtx.lastTimeObject = input ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 106, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `extracted = timestampConverter.apply(input) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (input.equals(ctx.lastTimeObject)) { 	extracted = ctx.lastDateTime; } else { 	extracted = timesta[...] ` -topatch--> `if (true) { 	extracted = ctx.lastDateTime; } else { 	extracted = this.timestampConverter.apply(input[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (input.equals(ctx.lastTimeObject)) { 	extracted = ctx.lastDateTime; } else { 	extracted = timesta[...] ` -topatch--> `if (false) { 	extracted = ctx.lastDateTime; } else { 	extracted = this.timestampConverter.apply(inpu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (input.equals(ctx.lastTimeObject)) { 	extracted = ctx.lastDateTime; } else { 	extracted = timesta[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (input != null) { 	io.druid.data.input.impl.TimestampSpec.ParseCtx ctx = io.druid.data.input.impl[...] ` -topatch--> `if (true) { 	io.druid.data.input.impl.TimestampSpec.ParseCtx ctx = io.druid.data.input.impl.Timestam[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (input != null) { 	io.druid.data.input.impl.TimestampSpec.ParseCtx ctx = io.druid.data.input.impl[...] ` -topatch--> `if (false) { 	io.druid.data.input.impl.TimestampSpec.ParseCtx ctx = io.druid.data.input.impl.Timesta[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.TimestampSpec line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (input != null) { 	io.druid.data.input.impl.TimestampSpec.ParseCtx ctx = io.druid.data.input.impl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFiles.size() > 0) {   	return new io.druid.data.input.impl.prefetch.OpenedObject<>(fetche[...] ` -topatch--> `if (true) {   	return new io.druid.data.input.impl.prefetch.OpenedObject<>(this.fetchedFiles.poll())[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFiles.size() > 0) {   	return new io.druid.data.input.impl.prefetch.OpenedObject<>(fetche[...] ` -topatch--> `if (false) {   	return new io.druid.data.input.impl.prefetch.OpenedObject<>(this.fetchedFiles.poll()[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFiles.size() > 0) {   	return new io.druid.data.input.impl.prefetch.OpenedObject<>(fetche[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) {  	try {  		fetch(); 		io.druid.data.input.impl.prefetch.FetchedFile<[...] ` -topatch--> `if (true) {  	try {  		fetch(); 		io.druid.data.input.impl.prefetch.FetchedFile<T> fetchedFile = thi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) {  	try {  		fetch(); 		io.druid.data.input.impl.prefetch.FetchedFile<[...] ` -topatch--> `if (false) {  	try {  		fetch(); 		io.druid.data.input.impl.prefetch.FetchedFile<T> fetchedFile = th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 288, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cacheManager.cacheable()) {  	try {  		fetch(); 		io.druid.data.input.impl.prefetch.FetchedFile<[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 305, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.data.input.impl.prefetch.Fetcher.LOG.info("Reading [%d]th object[%s]", nextFetchIndex, obje[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 307, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new io.druid.data.input.impl.prefetch.OpenedObject<>( object,  new io.druid.data.input.impl.p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 168, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int nTry = 0; nTry < maxRetry; nTry++) { 	try { 		return delegate.available(); 	} 	 catch (java[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 292, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fetch() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) { 	throw new io.druid.java.util.common.ISE("Cannot fetch object[%s]", objec[...] ` -topatch--> `if (true) { 	throw new io.druid.java.util.common.ISE("Cannot fetch object[%s]", this.objects.get(thi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) { 	throw new io.druid.java.util.common.ISE("Cannot fetch object[%s]", objec[...] ` -topatch--> `if (false) { 	throw new io.druid.java.util.common.ISE("Cannot fetch object[%s]", this.objects.get(th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 294, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (fetchedFile == null) { 	throw new io.druid.java.util.common.ISE("Cannot fetch object[%s]", objec[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 298, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new io.druid.data.input.impl.prefetch.OpenedObject<>(cached) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 203, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.io.IOException(e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 182, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `delegate.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 140, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int nTry = 0; nTry < maxRetry; nTry++) { 	try { 		return delegate.read(b, off, len); 	} 	 catch[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxRetry = maxRetry ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.retryCondition = retryCondition ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.delegate = new com.google.common.io.CountingInputStream(objectOpenFunction.open(object)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.objectOpenFunction = objectOpenFunction ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.object = object ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 246, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.RuntimeException(e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 249, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new io.druid.java.util.common.ISE(e, "Failed to fetch, but cannot check the reason in [%d] ms"[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.Fetcher line: 287, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new io.druid.data.input.impl.prefetch.OpenedObject<>(fetchedFiles.poll()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.SpatialDimensionSchema line: 41, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimName = dimName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.SpatialDimensionSchema line: 42, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dims = dims ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 99, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.dimensions.add(newSchema) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dimensionSchemaMap.put(newSchema.getName(), newSchema) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 97, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.druid.data.input.impl.SpatialDimensionSchema spatialSchema : spatialDims) { 	io.druid.data.i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.NewSpatialDimensionSchema line: 47, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dims = dims ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 145, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `waitOrThrow(t, nTry) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 76, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `startOffset += delegate.getCount() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `delegate.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) {  	startOffset += delegate.getCount(); 	try { 		delegate.close(); 	} 	 catch[...] ` -topatch--> `if (true) {  	this.startOffset += this.delegate.getCount(); 	try { 		this.delegate.close(); 	} 	 cat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) {  	startOffset += delegate.getCount(); 	try { 		delegate.close(); 	} 	 catch[...] ` -topatch--> `if (false) {  	this.startOffset += this.delegate.getCount(); 	try { 		this.delegate.close(); 	} 	 ca[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 74, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) {  	startOffset += delegate.getCount(); 	try { 		delegate.close(); 	} 	 catch[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset || retryCondition.apply(t)) { 	if (isConnectionReset) {  		startOffset += dele[...] ` -topatch--> `if (true) { 	if (isConnectionReset) {  		this.startOffset += this.delegate.getCount(); 		try { 			th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset || retryCondition.apply(t)) { 	if (isConnectionReset) {  		startOffset += dele[...] ` -topatch--> `if (false) { 	if (isConnectionReset) {  		this.startOffset += this.delegate.getCount(); 		try { 			t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset || retryCondition.apply(t)) { 	if (isConnectionReset) {  		startOffset += dele[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 91, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `delegate = new com.google.common.io.CountingInputStream(objectOpenFunction.open(object, startOffset)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.java.util.common.RetryUtils.awaitNextRetry(t, null, nTry + 1, maxRetry, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying from offset[%d]", startOffs[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) { 	io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying f[...] ` -topatch--> `if (true) { 	io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying from offset[%d[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) { 	io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying f[...] ` -topatch--> `if (false) { 	io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying from offset[%[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.prefetch.RetryingInputStream line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isConnectionReset) { 	io.druid.data.input.impl.prefetch.RetryingInputStream.log.info("retrying f[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.StringDimensionSchema line: 48, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(name, null, io.druid.data.input.impl.StringDimensionSchema.DEFAULT_CREATE_BITMAP_INDEX) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 94, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dimensionSchemaMap.put(schema.getName(), schema) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 93, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.druid.data.input.impl.DimensionSchema schema : this.dimensions) { 	dimensionSchemaMap.put(sc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 214, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.java.util.common.parsers.ParserUtils.validateFields(com.google.common.collect.Iterables.con[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 199, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.java.util.common.parsers.ParserUtils.validateFields(dimensionExclusions) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 198, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `io.druid.java.util.common.parsers.ParserUtils.validateFields(dimNames) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verify(spatialDims) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 92, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimensionSchemaMap = new java.util.HashMap<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionSchema line: 129, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.createBitmapIndex = createBitmapIndex ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionSchema line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.multiValueHandling = (multiValueHandling == null) ? io.druid.data.input.impl.DimensionSchema.Mu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionSchema line: 127, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = com.google.common.base.Preconditions.checkNotNull(name, "Dimension name cannot be null."[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 193, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.google.common.base.Preconditions.checkArgument( com.google.common.collect.Sets.intersection(this[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimensionExclusions = (dimensionExclusions == null) ?  com.google.common.collect.Sets.<java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.druid.data.input.impl.DimensionsSpec line: 77, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dimensions = (dimensions == null) ?  com.google.common.collect.Lists.<io.druid.data.input.impl.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 3984.586
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 4060.521
