[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 15
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-core/3.5.1/vertx-core-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-common/4.1.19.Final/netty-common-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-buffer/4.1.19.Final/netty-buffer-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-transport/4.1.19.Final/netty-transport-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler/4.1.19.Final/netty-handler-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec/4.1.19.Final/netty-codec-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.19.Final/netty-handler-proxy-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-socks/4.1.19.Final/netty-codec-socks-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http/4.1.19.Final/netty-codec-http-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http2/4.1.19.Final/netty-codec-http2-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver/4.1.19.Final/netty-resolver-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver-dns/4.1.19.Final/netty-resolver-dns-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-dns/4.1.19.Final/netty-codec-dns-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-proton/3.5.1/vertx-proton-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/apache/qpid/proton-j/0.25.0/proton-j-0.25.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-codegen/3.5.1/vertx-codegen-3.5.1-processor.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mvel/mvel2/2.3.1.Final/mvel2-2.3.1.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/slf4j/slf4j-api/1.7.24/slf4j-api-1.7.24.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-legal/0.6-SNAPSHOT/hono-legal-0.6-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/jsonwebtoken/jjwt/0.7.0/jjwt-0.7.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0/jackson-databind-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0/jackson-core-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-demo-certs/0.6-SNAPSHOT/hono-demo-certs-0.6-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-unit/3.5.1/vertx-unit-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 115190 milliseconds (115 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-core/3.5.1/vertx-core-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-common/4.1.19.Final/netty-common-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-buffer/4.1.19.Final/netty-buffer-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-transport/4.1.19.Final/netty-transport-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler/4.1.19.Final/netty-handler-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec/4.1.19.Final/netty-codec-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.19.Final/netty-handler-proxy-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-socks/4.1.19.Final/netty-codec-socks-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http/4.1.19.Final/netty-codec-http-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http2/4.1.19.Final/netty-codec-http2-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver/4.1.19.Final/netty-resolver-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver-dns/4.1.19.Final/netty-resolver-dns-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-dns/4.1.19.Final/netty-codec-dns-4.1.19.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-proton/3.5.1/vertx-proton-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/apache/qpid/proton-j/0.25.0/proton-j-0.25.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-codegen/3.5.1/vertx-codegen-3.5.1-processor.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mvel/mvel2/2.3.1.Final/mvel2-2.3.1.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/slf4j/slf4j-api/1.7.24/slf4j-api-1.7.24.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-legal/0.6-SNAPSHOT/hono-legal-0.6-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/jsonwebtoken/jjwt/0.7.0/jjwt-0.7.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0/jackson-databind-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0/jackson-core-2.9.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-demo-certs/0.6-SNAPSHOT/hono-demo-certs-0.6-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-unit/3.5.1/vertx-unit-3.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 46
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 79
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 79,  76
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 76
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 76, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/dginelli/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 115190
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-core/3.5.1/vertx-core-3.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-common/4.1.19.Final/netty-common-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-buffer/4.1.19.Final/netty-buffer-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-transport/4.1.19.Final/netty-transport-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler/4.1.19.Final/netty-handler-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec/4.1.19.Final/netty-codec-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.19.Final/netty-handler-proxy-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-socks/4.1.19.Final/netty-codec-socks-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http/4.1.19.Final/netty-codec-http-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-http2/4.1.19.Final/netty-codec-http2-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver/4.1.19.Final/netty-resolver-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-resolver-dns/4.1.19.Final/netty-resolver-dns-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/netty/netty-codec-dns/4.1.19.Final/netty-codec-dns-4.1.19.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-proton/3.5.1/vertx-proton-3.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/apache/qpid/proton-j/0.25.0/proton-j-0.25.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-codegen/3.5.1/vertx-codegen-3.5.1-processor.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mvel/mvel2/2.3.1.Final/mvel2-2.3.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/slf4j/slf4j-api/1.7.24/slf4j-api-1.7.24.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-legal/0.6-SNAPSHOT/hono-legal-0.6-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/jsonwebtoken/jjwt/0.7.0/jjwt-0.7.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0/jackson-databind-2.9.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0/jackson-core-2.9.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/eclipse/hono/hono-demo-certs/0.6-SNAPSHOT/hono-demo-certs-0.6-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/io/vertx/vertx-unit/3.5.1/vertx-unit-3.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-ctron-hono-370099951-20180423-154032-firstCommit/core
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (keyPath != null) { 	privateKey = org.eclipse.hono.config.KeyLoader.loadPrivateKeyFromFile(vertx,[...] ` -topatch--> `if (true) { 	privateKey = org.eclipse.hono.config.KeyLoader.loadPrivateKeyFromFile(vertx, keyPath); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (keyPath != null) { 	privateKey = org.eclipse.hono.config.KeyLoader.loadPrivateKeyFromFile(vertx,[...] ` -topatch--> `if (false) { 	privateKey = org.eclipse.hono.config.KeyLoader.loadPrivateKeyFromFile(vertx, keyPath);[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 142, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (keyPath != null) { 	privateKey = org.eclipse.hono.config.KeyLoader.loadPrivateKeyFromFile(vertx,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 140, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.security.PublicKey publicKey = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 139, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.security.PrivateKey privateKey = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 164, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException(java.lang.String.format("%s: Private key file does not [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(pathName)) { 	throw new java.lang.IllegalArgumentException(ja[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException(java.lang.String.format("%s: Private key f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(pathName)) { 	throw new java.lang.IllegalArgumentException(ja[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException(java.lang.String.format("%s: Private key [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(pathName)) { 	throw new java.lang.IllegalArgumentException(ja[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.PemReader line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 371, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.keyFormat = keyFormat ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((this.keyPath != null) && (this.certPath != null)) {  	if (!java.nio.file.Files.exists(java.nio.[...] ` -topatch--> `if (true) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyPath))) { 		throw new [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((this.keyPath != null) && (this.certPath != null)) {  	if (!java.nio.file.Files.exists(java.nio.[...] ` -topatch--> `if (false) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyPath))) { 		throw new[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 222, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((this.keyPath != null) && (this.certPath != null)) {  	if (!java.nio.file.Files.exists(java.nio.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 210, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.keyStorePassword = keyStorePassword.toCharArray() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (keyStorePassword == null) { 	this.keyStorePassword = null; } else { 	this.keyStorePassword = key[...] ` -topatch--> `if (true) { 	this.keyStorePassword = null; } else { 	this.keyStorePassword = keyStorePassword.toChar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (keyStorePassword == null) { 	this.keyStorePassword = null; } else { 	this.keyStorePassword = key[...] ` -topatch--> `if (false) { 	this.keyStorePassword = null; } else { 	this.keyStorePassword = keyStorePassword.toCha[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (keyStorePassword == null) { 	this.keyStorePassword = null; } else { 	this.keyStorePassword = key[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 187, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.keyStorePath = keyStorePath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyStorePath))) { 	throw new java.lang.[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured keys[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyStorePath))) { 	throw new java.lang.[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured key[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyStorePath))) { 	throw new java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 268, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException( java.lang.String.format("Configured keystore file does[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 46, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("pfx", org.eclipse.hono.config.FileFormat.PKCS12) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 43, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("crt", org.eclipse.hono.config.FileFormat.PEM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 42, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("key", org.eclipse.hono.config.FileFormat.PEM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 45, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("p12", org.eclipse.hono.config.FileFormat.PKCS12) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 39, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("jks", org.eclipse.hono.config.FileFormat.JKS) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.FileFormat line: 41, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.eclipse.hono.config.FileFormat.EXTENSIONS.put("pem", org.eclipse.hono.config.FileFormat.PEM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (certPath != null) { 	publicKey = org.eclipse.hono.config.KeyLoader.loadPublicKeyFromFile(vertx, [...] ` -topatch--> `if (true) { 	publicKey = org.eclipse.hono.config.KeyLoader.loadPublicKeyFromFile(vertx, certPath); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (certPath != null) { 	publicKey = org.eclipse.hono.config.KeyLoader.loadPublicKeyFromFile(vertx, [...] ` -topatch--> `if (false) { 	publicKey = org.eclipse.hono.config.KeyLoader.loadPublicKeyFromFile(vertx, certPath); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (certPath != null) { 	publicKey = org.eclipse.hono.config.KeyLoader.loadPublicKeyFromFile(vertx, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 208, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `LOG.warn("could not load client credentials for [{}] from file [{}]",  host, credentialsPath, e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 194, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.credentialsPath = path ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 225, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException( java.lang.String.format("Configured key file does not [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyPath))) { 	throw new java.lang.Illeg[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured key [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyPath))) { 	throw new java.lang.Illeg[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured key[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyPath))) { 	throw new java.lang.Illeg[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 343, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.keyPath = keyPath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 320, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.certPath = certPath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 478, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.setTenantId(tenantId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 479, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.setEnabled(enabled) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 474, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(tenantId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 475, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(enabled) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (username == null) { 	loadCredentials(); } ` -topatch--> `if (true) { 	loadCredentials(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (username == null) { 	loadCredentials(); } ` -topatch--> `if (false) { 	loadCredentials(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (username == null) { 	loadCredentials(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadCredentials() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((username == null) && (password == null)) && (credentialsPath != null)) { 	try (java.io.FileInp[...] ` -topatch--> `if (true) { 	try (final java.io.FileInputStream fis = new java.io.FileInputStream(this.credentialsPa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((username == null) && (password == null)) && (credentialsPath != null)) { 	try (java.io.FileInp[...] ` -topatch--> `if (false) { 	try (final java.io.FileInputStream fis = new java.io.FileInputStream(this.credentialsP[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((username == null) && (password == null)) && (credentialsPath != null)) { 	try (java.io.FileInp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 128, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `json.put(org.eclipse.hono.util.TenantConstants.FIELD_PAYLOAD_TENANT_ID, tenantId) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.util.TenantObject line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `json.put(org.eclipse.hono.util.TenantConstants.FIELD_ENABLED, flag) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.keyStorePath != null) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyS[...] ` -topatch--> `if (true) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyStorePath))) { 		throw[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.keyStorePath != null) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyS[...] ` -topatch--> `if (false) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyStorePath))) { 		thro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.keyStorePath != null) {  	if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.keyS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 99, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.trustStorePath = trustStorePath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 139, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException( java.lang.String.format("Configured trust store file d[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.trustStorePath))) { 	throw new java.lan[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured trus[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.trustStorePath))) { 	throw new java.lan[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException( 	java.lang.String.format("Configured tru[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.nio.file.Files.exists(java.nio.file.Paths.get(this.trustStorePath))) { 	throw new java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 105, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException("key store does not exist") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(java.util.Objects.requireNonNull(keyStorePath))) { 	throw new[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("key store does not exist"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(java.util.Objects.requireNonNull(keyStorePath))) { 	throw new[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("key store does not exist"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!vertx.fileSystem().existsBlocking(java.util.Objects.requireNonNull(keyStorePath))) { 	throw new[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(keyStorePath) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.KeyLoader line: 101, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(vertx) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (password == null) { 	loadCredentials(); } ` -topatch--> `if (true) { 	loadCredentials(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (password == null) { 	loadCredentials(); } ` -topatch--> `if (false) { 	loadCredentials(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (password == null) { 	loadCredentials(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadCredentials() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 73, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.protonClient = java.util.Objects.requireNonNull(protonClient) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.vertx = java.util.Objects.requireNonNull(vertx) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = java.util.Objects.requireNonNull(config) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 72, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.host = java.util.Objects.requireNonNull(host) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isValidPort(port)) { 	this.port = port; } else { 	throw new java.lang.IllegalArgumentException("[...] ` -topatch--> `if (true) { 	this.port = port; } else { 	throw new java.lang.IllegalArgumentException("invalid port [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isValidPort(port)) { 	this.port = port; } else { 	throw new java.lang.IllegalArgumentException("[...] ` -topatch--> `if (false) { 	this.port = port; } else { 	throw new java.lang.IllegalArgumentException("invalid port[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isValidPort(port)) { 	this.port = port; } else { 	throw new java.lang.IllegalArgumentException("[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 96, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.port = port ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clientOptions.getTrustOptions() == null) { 	io.vertx.core.net.TrustOptions trustOptions = config[...] ` -topatch--> `if (true) { 	io.vertx.core.net.TrustOptions trustOptions = this.config.getTrustOptions(); 	if (trust[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (clientOptions.getTrustOptions() == null) { 	io.vertx.core.net.TrustOptions trustOptions = config[...] ` -topatch--> `if (false) { 	io.vertx.core.net.TrustOptions trustOptions = this.config.getTrustOptions(); 	if (trus[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (clientOptions.getTrustOptions() == null) { 	io.vertx.core.net.TrustOptions trustOptions = config[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 202, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isTlsEnabled()) { 	clientOptions.setSsl(true); } ` -topatch--> `if (true) { 	clientOptions.setSsl(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 202, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isTlsEnabled()) { 	clientOptions.setSsl(true); } ` -topatch--> `if (false) { 	clientOptions.setSsl(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 202, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isTlsEnabled()) { 	clientOptions.setSsl(true); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Objects.requireNonNull(connectionResultHandler) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.IllegalStateException("Client configuration must be set")[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Client configuration must be set"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.IllegalStateException("Client configuration must be set")[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Client configuration must be set"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config == null) { 	throw new java.lang.IllegalStateException("Client configuration must be set")[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vertx == null) { 	throw new java.lang.IllegalStateException("Vert.x instance must be set"); } el[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Vert.x instance must be set"); } else { 	if [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vertx == null) { 	throw new java.lang.IllegalStateException("Vert.x instance must be set"); } el[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Vert.x instance must be set"); } else { 	if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.connection.ConnectionFactoryImpl line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (vertx == null) { 	throw new java.lang.IllegalStateException("Vert.x instance must be set"); } el[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 246, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.amqpHostname = amqpHostname ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.ClientConfigProperties line: 228, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.trustStorePath == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.trustStorePath == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.eclipse.hono.config.AbstractConfig line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.trustStorePath == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 522.798
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 545.749
