4. Поиск текста в файле. [#1106]
  Петр Арсентьев,  09.11.17 22:56
1. Нужно осуществлять обход файловой системы и поиск заданного текста в файловой системе.

public class ParallerSearch(String root, String text, List<String> exts) {
}

,где
root - путь до папки откуда надо осуществлять поиск.
text - заданных текст.
exts - расширения файлов в которых нужно делать поиск.

Приложения должно искать текст в файлах (в том числе и в подкаталогах) и сохранять адрес файла.

List<String> result(); - возвращает список всех файлов.

Логика приложения.

1. Запустить код.
2. Внутри запустить несколько потоков. Объяснить для чего нужно делать потоки.
3. Дождаться завершения поиска.
4. Вывести на консоль результат.

Коментарии


аннотация @GuardedBy("this") - говорит, что для доступа к этому полю нужно,
чтобы методы синхронизировались на текущем объекте (на который указывает ссылка this).

Если вы хотите, чтобы для доступа синхронизировались на неком поле,
то нужно в кавычках написать имя этого поля (например @GuardedBy("list")),
либо если аннотация указывается перед самим полем тот @GuardedBy("itself").

Плюс надо помнить, что сами по себе jcip аннотации не обеспечивают многопоточности,
они позволяют статическим анализаторам, находить не синхронизированный доступ.


