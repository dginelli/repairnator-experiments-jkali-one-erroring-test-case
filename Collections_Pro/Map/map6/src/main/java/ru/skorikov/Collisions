Рассказать про коллизии в Hashtable структурах и как они реализованы в Java

Коллизия возникает, когда два объекта имеют одинаковый хэшкод, но не равны друг другу.

Методы разрешения :

1 - метод цепочек - когда таблица с индексами хэшкодов хранит ссылку на объект, если
    хэшкоды объектов равны, а сами объекты нет - первый объект получает ссылку на второй, второй
    ссылку null. Получается связанный список для каждого индекса таблицы.
    В Java8 используется модифицированный метод цепочек (В коллекциях Map) - это когда размер связанного
    списка превышает определенное значение (кажется 8), то ячейка таблицы переходит от использования
    связанного списка к сбалансированному дереву.

2 - линейный метод - когда таблица хранит значение элемента.
    Если ячейка уже занята, то различными методами (последовательным - когда проверяются ячейки следующие
    за занятой с шагом 1, линейным - когда проверяются следующие ячейки с шагом N, квадратичным - с шагом
    квадрат N) находится свободная ячейка и значение записывается туда.
    В колекциях типа Map, когда заполненность таблицы превысит опеределенный процент (по умолчанию 75%
    т.н loadfactor) создается новая таблица в два раза больше исходной (исходная по умолчанию = 16) и
    данные равномерно распределяются в ней.

3 - есть метод двойного хэширования, но его можно рассматривать как частный случай линейного метода.