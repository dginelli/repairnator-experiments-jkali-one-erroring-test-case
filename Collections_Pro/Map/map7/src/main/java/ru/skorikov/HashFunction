7. Как вычисляются hash функция

В Java хэшфункция - нативный(реализованный на С++) метод работающий на основе генератора случайных чисел
и возвращающий число типа int. Если более точно, то это битовая строка фиксированной длины, полученная
из массива произвольной длины(вики) полученная от работы функции которой в качестве параметра передали объект.

По умолчанию метод equals в Java сравнивает ссылки на объекты, по этому гарантированно одинаковый хэшкод
мы получим только у объектов ссылающихся на однин и тот же объект.

Если нам нужно задать свои правила определения равенства объектов, то нужно переопределить и
функцию hashCode класса Object.

Главное правило при переопределении методов equals & hashCode - равные объекты должны иметь равный хэш-код.

В книге Блох Джошуа Java. Эффективное программирование (2014) даны общие правила переопределения hashCode()

 1. Присвойте результирующей переменной (result) некоторое ненулевое простое число (например, 17)
 2. Если поле value имеет тип boolean, вычислите (value ? О : 1)
 3. Если поле value имеет тип byte, char, short или int, вычислите (int)value
 4. Если поле value имеет тип long, вычислите (int)(value - (value >>> 32))
 5. Если поле value имеет тип float, вычислите Float.floatToIntBits(value)
 6. Если поле value имеет тип double, вычислите Double.doubleToLongBits(value), а затем преобразуйте полученное значение, как указано в п.4
 7. Если поле value является ссылкой на объект, вызывайте метод hashCode() этого объекта
 8. Если поле value является ссылкой на объект и равно null, используйте число 0 для представления его хэш-кода
 9. Объедините полученные в п. 2 - п. 8 значения следующим образом: 37*result + value
 10. Если поле является массивом, примените правило 9 для каждого элемента массива
 11. Проверьте, что равные объекты возвращают одинаковый hashCode