{
	"variables": [],
	"info": {
		"name": "API SERVER",
		"_postman_id": "77d94cce-0005-4a29-2e3f-e9fb2efb1649",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "https://{{tenant}}.auth0.com/usernamepassword/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n//var auth0CookieName = 'auth0';\n//var auth0Cookie = postman.getResponseCookie(auth0CookieName);\n\ntests[\"Body contains wa\"] = responseBody.has(\"wa\");\ntests[\"Body contains wresult\"] = responseBody.has(\"wresult\");\ntests[\"Body contains wctx\"] = responseBody.has(\"wctx\");\n\nvar html = $.parseHTML(responseBody);\n\nvar w = {};\nw.wa = $(html).find('input[name=\"wa\"]').val();\nw.wresult =  $(html).find('input[name=\"wresult\"]').val();\nw.wctx =  $(html).find('input[name=\"wctx\"]').val();\n\npostman.setEnvironmentVariable(\"wa\", w.wa);\npostman.setEnvironmentVariable(\"wresult\", w.wresult);\npostman.setEnvironmentVariable(\"wctx\", w.wctx);"
					}
				}
			],
			"request": {
				"url": "https://{{tenant}}.auth0.com/usernamepassword/login",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"description": ""
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "scope",
							"value": "{{scope}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "response_type",
							"value": "token",
							"type": "text",
							"enabled": true
						},
						{
							"key": "connection",
							"value": "{{connection}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "popup",
							"value": "false",
							"type": "text",
							"enabled": true
						},
						{
							"key": "sso",
							"value": "false",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "tenant",
							"value": "{{tenant}}",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": "Login using username-password connection"
			},
			"response": []
		},
		{
			"name": "https://{{tenant}}.auth0.com/login/callback",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 302\"] = responseCode.code === 302;\ntests[\"Location is present\"] = postman.getResponseHeader(\"Location\");\n\nvar getParameterByName = function (queryParam, key) {\n  key = key.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + key + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(queryParam);\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return '';\n  }\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\nvar location = postman.getResponseHeader(\"Location\");\nvar queryParam = location.split('#')[1];\nvar jwtToken = getParameterByName(queryParam, 'id_token');\npostman.setEnvironmentVariable(\"jwt_token\", jwtToken);\n\n"
					}
				}
			],
			"request": {
				"url": "https://{{tenant}}.auth0.com/login/callback",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"description": ""
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "wa",
							"value": "{{wa}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "wresult",
							"value": "{{wresult}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "wctx",
							"value": "{{wctx}}",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/secured/parish/57435f4dccbd5297c86047fc",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;"
					}
				}
			],
			"request": {
				"url": "http://localhost:3000/secured/parish/57435f4dccbd5297c86047fc",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": "Secured ping to check Resource Server is responding - authorization credentials (JWT access token) required - however, no Roles information (scope) required."
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cities/5766f3c54bd79465cfbe4623",
			"request": {
				"url": "http://localhost:3000/api/cities",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		}
	]
}