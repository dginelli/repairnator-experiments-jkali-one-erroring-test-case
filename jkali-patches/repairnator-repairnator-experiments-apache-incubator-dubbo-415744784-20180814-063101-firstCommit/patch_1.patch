--- /src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboProtocol.java
+++ /src/main/java/org/apache/dubbo/rpc/protocol/dubbo/DubboProtocol.java
@@ -182,14 +182,14 @@
 		exporterMap.put(key, exporter);
 		java.lang.Boolean isStubSupportEvent = url.getParameter(org.apache.dubbo.common.Constants.STUB_EVENT_KEY, org.apache.dubbo.common.Constants.DEFAULT_STUB_EVENT);
 		java.lang.Boolean isCallbackservice = url.getParameter(org.apache.dubbo.common.Constants.IS_CALLBACK_SERVICE, false);
-		if (isStubSupportEvent && (!isCallbackservice)) {
+		if (false) {
 			java.lang.String stubServiceMethods = url.getParameter(org.apache.dubbo.common.Constants.STUB_EVENT_METHODS_KEY);
 			if ((stubServiceMethods == null) || (stubServiceMethods.length() == 0)) {
-				if (logger.isWarnEnabled()) {
-					logger.warn(new java.lang.IllegalStateException(("consumer [" + url.getParameter(org.apache.dubbo.common.Constants.INTERFACE_KEY)) + "], has set stubproxy support event ,but no stub methods founded."));
+				if (this.logger.isWarnEnabled()) {
+					this.logger.warn(new java.lang.IllegalStateException(("consumer [" + url.getParameter(org.apache.dubbo.common.Constants.INTERFACE_KEY)) + "], has set stubproxy support event ,but no stub methods founded."));
 				}
 			} else {
-				stubServiceMethodsMap.put(url.getServiceKey(), stubServiceMethods);
+				this.stubServiceMethodsMap.put(url.getServiceKey(), stubServiceMethods);
 			}
 		}
 		openServer(url);

